{"version":3,"sources":["../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/process/browser.js","src/performance-now.coffee","../node_modules/raf/index.js","../node_modules/object-assign/index.js","../src/parallax.js","../node_modules/typewriter-effect/dist/core.js","../node_modules/alertifyjs/build/alertify.js","../src/index.js"],"names":["cachedSetTimeout","cachedClearTimeout","process","module","exports","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","call","runClearTimeout","marker","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","Item","array","noop","nextTick","args","Array","arguments","i","push","prototype","apply","title","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","getOwnPropertySymbols","Object","hasOwnProperty","propIsEnumerable","propertyIsEnumerable","toObject","val","TypeError","shouldUseNative","assign","test1","String","getOwnPropertyNames","test2","fromCharCode","order2","map","n","join","test3","split","forEach","letter","keys","err","target","source","from","symbols","to","s","key","rqAnFr","require","objectAssign","helpers","propertyCache","vendors","clamp","value","min","max","data","element","deserialize","getAttribute","isNaN","parseFloat","isFinite","camelCase","replace","match","character","toUpperCase","accelerate","css","transformSupport","document","createElement","propertySupport","propertyValue","featureSupport","cssProperty","jsProperty","l","undefined","style","body","documentElement","documentOverflow","overflow","isCreatedBody","appendChild","background","window","getComputedStyle","getPropertyValue","removeChild","removeAttribute","parentNode","property","MAGIC_NUMBER","DEFAULTS","relativeInput","clipRelativeInput","inputElement","hoverOnly","calibrationThreshold","calibrationDelay","supportDelay","calibrateX","calibrateY","invertX","invertY","limitX","limitY","scalarX","scalarY","frictionX","frictionY","originX","originY","pointerEvents","precision","onReady","selector","Parallax","options","querySelector","overrideCSS","calibrationTimer","calibrationFlag","enabled","depthsX","depthsY","raf","bounds","elementPositionX","elementPositionY","elementWidth","elementHeight","elementCenterX","elementCenterY","elementRangeX","elementRangeY","calibrationX","calibrationY","inputX","inputY","motionX","motionY","velocityX","velocityY","onMouseMove","bind","onDeviceOrientation","onDeviceMotion","onOrientationTimer","onMotionTimer","onCalibrationTimer","onAnimationFrame","onWindowResize","windowWidth","windowHeight","windowCenterX","windowCenterY","windowRadiusX","windowRadiusY","portrait","desktop","navigator","userAgent","motionSupport","DeviceMotionEvent","orientationSupport","DeviceOrientationEvent","orientationStatus","motionStatus","initialise","transform2DSupport","transform3DSupport","position","updateLayers","updateDimensions","enable","queueCalibration","layers","querySelectorAll","children","console","warn","index","layer","display","left","top","depth","innerWidth","innerHeight","Math","getBoundingClientRect","width","height","delay","addEventListener","detectionTimer","doReadyCallback","removeEventListener","cancel","x","y","toFixed","disable","updateBounds","calibratedInputX","calibratedInputY","abs","depthX","depthY","xOffset","yOffset","setPosition","beta","gamma","event","rotate","rotationRate","clientX","clientY","scene","getElementById","parallaxInstance","friction","limit","Typewriter","strings","autoStart","loop","deleteSpeed","pauseFor","handleSubmit","preventDefault","myForm","formData","FormData","fetch","method","headers","URLSearchParams","toString","then","success","log","catch","error","alert"],"mappings":"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","file":"src.0cc79209.js","sourceRoot":"..\\public","sourcesContent":["function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","if performance? and performance.now\n  module.exports = -> performance.now()\nelse if process? and process.hrtime\n  module.exports = -> (getNanoSeconds() - nodeLoadTime) / 1e6\n  hrtime = process.hrtime\n  getNanoSeconds = ->\n    hr = hrtime()\n    hr[0] * 1e9 + hr[1]\n  moduleLoadTime = getNanoSeconds()\n  upTime = process.uptime() * 1e9\n  nodeLoadTime = moduleLoadTime - upTime\nelse if Date.now\n  module.exports = -> Date.now() - loadTime\n  loadTime = Date.now()\nelse\n  module.exports = -> new Date().getTime() - loadTime\n  loadTime = new Date().getTime()\n","var now = require('performance-now')\n  , root = typeof window === 'undefined' ? global : window\n  , vendors = ['moz', 'webkit']\n  , suffix = 'AnimationFrame'\n  , raf = root['request' + suffix]\n  , caf = root['cancel' + suffix] || root['cancelRequest' + suffix]\n\nfor(var i = 0; !raf && i < vendors.length; i++) {\n  raf = root[vendors[i] + 'Request' + suffix]\n  caf = root[vendors[i] + 'Cancel' + suffix]\n      || root[vendors[i] + 'CancelRequest' + suffix]\n}\n\n// Some versions of FF have rAF but not cAF\nif(!raf || !caf) {\n  var last = 0\n    , id = 0\n    , queue = []\n    , frameDuration = 1000 / 60\n\n  raf = function(callback) {\n    if(queue.length === 0) {\n      var _now = now()\n        , next = Math.max(0, frameDuration - (_now - last))\n      last = next + _now\n      setTimeout(function() {\n        var cp = queue.slice(0)\n        // Clear queue here to prevent\n        // callbacks from appending listeners\n        // to the current frame's queue\n        queue.length = 0\n        for(var i = 0; i < cp.length; i++) {\n          if(!cp[i].cancelled) {\n            try{\n              cp[i].callback(last)\n            } catch(e) {\n              setTimeout(function() { throw e }, 0)\n            }\n          }\n        }\n      }, Math.round(next))\n    }\n    queue.push({\n      handle: ++id,\n      callback: callback,\n      cancelled: false\n    })\n    return id\n  }\n\n  caf = function(handle) {\n    for(var i = 0; i < queue.length; i++) {\n      if(queue[i].handle === handle) {\n        queue[i].cancelled = true\n      }\n    }\n  }\n}\n\nmodule.exports = function(fn) {\n  // Wrap in a new function to prevent\n  // `cancel` potentially being assigned\n  // to the native rAF function\n  return raf.call(root, fn)\n}\nmodule.exports.cancel = function() {\n  caf.apply(root, arguments)\n}\nmodule.exports.polyfill = function(object) {\n  if (!object) {\n    object = root;\n  }\n  object.requestAnimationFrame = raf\n  object.cancelAnimationFrame = caf\n}\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/**\n * Parallax.js\n * @author Matthew Wagerfield - @wagerfield, René Roth - mail@reneroth.org\n * @description Creates a parallax effect between an array of layers,\n *              driving the motion from the gyroscope output of a smartdevice.\n *              If no gyroscope is available, the cursor position is used.\n * @override updateLayers() - Allows to disable layer's css override.\n */\n\nconst rqAnFr = require('raf')\nconst objectAssign = require('object-assign')\n\nconst helpers = {\n    propertyCache: {},\n    vendors: [null, ['-webkit-', 'webkit'],\n        ['-moz-', 'Moz'],\n        ['-o-', 'O'],\n        ['-ms-', 'ms']\n    ],\n\n    clamp(value, min, max) {\n        return min < max ?\n            (value < min ? min : value > max ? max : value) :\n            (value < max ? max : value > min ? min : value)\n    },\n\n    data(element, name) {\n        return helpers.deserialize(element.getAttribute('data-' + name))\n    },\n\n    deserialize(value) {\n        if (value === 'true') {\n            return true\n        } else if (value === 'false') {\n            return false\n        } else if (value === 'null') {\n            return null\n        } else if (!isNaN(parseFloat(value)) && isFinite(value)) {\n            return parseFloat(value)\n        } else {\n            return value\n        }\n    },\n\n    camelCase(value) {\n        return value.replace(/-+(.)?/g, (match, character) => {\n            return character ? character.toUpperCase() : ''\n        })\n    },\n\n    accelerate(element) {\n        helpers.css(element, 'transform', 'translate3d(0,0,0) rotate(0.0001deg)')\n        helpers.css(element, 'transform-style', 'preserve-3d')\n        helpers.css(element, 'backface-visibility', 'hidden')\n    },\n\n    transformSupport(value) {\n        let element = document.createElement('div'),\n            propertySupport = false,\n            propertyValue = null,\n            featureSupport = false,\n            cssProperty = null,\n            jsProperty = null\n        for (let i = 0, l = helpers.vendors.length; i < l; i++) {\n            if (helpers.vendors[i] !== null) {\n                cssProperty = helpers.vendors[i][0] + 'transform'\n                jsProperty = helpers.vendors[i][1] + 'Transform'\n            } else {\n                cssProperty = 'transform'\n                jsProperty = 'transform'\n            }\n            if (element.style[jsProperty] !== undefined) {\n                propertySupport = true\n                break\n            }\n        }\n        switch (value) {\n            case '2D':\n                featureSupport = propertySupport\n                break\n            case '3D':\n                if (propertySupport) {\n                    let body = document.body || document.createElement('body'),\n                        documentElement = document.documentElement,\n                        documentOverflow = documentElement.style.overflow,\n                        isCreatedBody = false\n\n                    if (!document.body) {\n                        isCreatedBody = true\n                        documentElement.style.overflow = 'hidden'\n                        documentElement.appendChild(body)\n                        body.style.overflow = 'hidden'\n                        body.style.background = ''\n                    }\n\n                    body.appendChild(element)\n                    element.style[jsProperty] = 'translate3d(1px,1px,1px)'\n                    propertyValue = window.getComputedStyle(element).getPropertyValue(cssProperty)\n                    featureSupport = propertyValue !== undefined && propertyValue.length > 0 && propertyValue !== 'none'\n                    documentElement.style.overflow = documentOverflow\n                    body.removeChild(element)\n\n                    if (isCreatedBody) {\n                        body.removeAttribute('style')\n                        body.parentNode.removeChild(body)\n                    }\n                }\n                break\n        }\n        return featureSupport\n    },\n\n    css(element, property, value) {\n        let jsProperty = helpers.propertyCache[property]\n        if (!jsProperty) {\n            for (let i = 0, l = helpers.vendors.length; i < l; i++) {\n                if (helpers.vendors[i] !== null) {\n                    jsProperty = helpers.camelCase(helpers.vendors[i][1] + '-' + property)\n                } else {\n                    jsProperty = property\n                }\n                if (element.style[jsProperty] !== undefined) {\n                    helpers.propertyCache[property] = jsProperty\n                    break\n                }\n            }\n        }\n        element.style[jsProperty] = value\n    }\n\n}\n\nconst MAGIC_NUMBER = 30,\n    DEFAULTS = {\n        relativeInput: false,\n        clipRelativeInput: false,\n        inputElement: null,\n        hoverOnly: false,\n        calibrationThreshold: 100,\n        calibrationDelay: 500,\n        supportDelay: 500,\n        calibrateX: false,\n        calibrateY: true,\n        invertX: true,\n        invertY: true,\n        limitX: false,\n        limitY: false,\n        scalarX: 10.0,\n        scalarY: 10.0,\n        frictionX: 0.1,\n        frictionY: 0.1,\n        originX: 0.5,\n        originY: 0.5,\n        pointerEvents: false,\n        precision: 1,\n        onReady: null,\n        selector: null\n    }\n\nclass Parallax {\n    constructor(element, options) {\n\n        this.element = element\n\n        const data = {\n            calibrateX: helpers.data(this.element, 'calibrate-x'),\n            calibrateY: helpers.data(this.element, 'calibrate-y'),\n            invertX: helpers.data(this.element, 'invert-x'),\n            invertY: helpers.data(this.element, 'invert-y'),\n            limitX: helpers.data(this.element, 'limit-x'),\n            limitY: helpers.data(this.element, 'limit-y'),\n            scalarX: helpers.data(this.element, 'scalar-x'),\n            scalarY: helpers.data(this.element, 'scalar-y'),\n            frictionX: helpers.data(this.element, 'friction-x'),\n            frictionY: helpers.data(this.element, 'friction-y'),\n            originX: helpers.data(this.element, 'origin-x'),\n            originY: helpers.data(this.element, 'origin-y'),\n            pointerEvents: helpers.data(this.element, 'pointer-events'),\n            precision: helpers.data(this.element, 'precision'),\n            relativeInput: helpers.data(this.element, 'relative-input'),\n            clipRelativeInput: helpers.data(this.element, 'clip-relative-input'),\n            hoverOnly: helpers.data(this.element, 'hover-only'),\n            inputElement: document.querySelector(helpers.data(this.element, 'input-element')),\n            selector: helpers.data(this.element, 'selector'),\n            overrideCSS: helpers.data(this.element, 'override-css')\n        }\n\n        for (let key in data) {\n            if (data[key] === null) {\n                delete data[key]\n            }\n        }\n\n        objectAssign(this, DEFAULTS, data, options)\n\n        if (!this.inputElement) {\n            this.inputElement = this.element\n        }\n\n        this.calibrationTimer = null\n        this.calibrationFlag = true\n        this.enabled = false\n        this.depthsX = []\n        this.depthsY = []\n        this.raf = null\n\n        this.bounds = null\n        this.elementPositionX = 0\n        this.elementPositionY = 0\n        this.elementWidth = 0\n        this.elementHeight = 0\n\n        this.elementCenterX = 0\n        this.elementCenterY = 0\n\n        this.elementRangeX = 0\n        this.elementRangeY = 0\n\n        this.calibrationX = 0\n        this.calibrationY = 0\n\n        this.inputX = 0\n        this.inputY = 0\n\n        this.motionX = 0\n        this.motionY = 0\n\n        this.velocityX = 0\n        this.velocityY = 0\n\n        this.onMouseMove = this.onMouseMove.bind(this)\n        this.onDeviceOrientation = this.onDeviceOrientation.bind(this)\n        this.onDeviceMotion = this.onDeviceMotion.bind(this)\n        this.onOrientationTimer = this.onOrientationTimer.bind(this)\n        this.onMotionTimer = this.onMotionTimer.bind(this)\n        this.onCalibrationTimer = this.onCalibrationTimer.bind(this)\n        this.onAnimationFrame = this.onAnimationFrame.bind(this)\n        this.onWindowResize = this.onWindowResize.bind(this)\n\n        this.windowWidth = null\n        this.windowHeight = null\n        this.windowCenterX = null\n        this.windowCenterY = null\n        this.windowRadiusX = null\n        this.windowRadiusY = null\n        this.portrait = false\n        this.desktop = !navigator.userAgent.match(/(iPhone|iPod|iPad|Android|BlackBerry|BB10|mobi|tablet|opera mini|nexus 7)/i)\n        this.motionSupport = !!window.DeviceMotionEvent && !this.desktop\n        this.orientationSupport = !!window.DeviceOrientationEvent && !this.desktop\n        this.orientationStatus = 0\n        this.motionStatus = 0\n\n        this.initialise()\n    }\n\n    initialise() {\n        if (this.transform2DSupport === undefined) {\n            this.transform2DSupport = helpers.transformSupport('2D')\n            this.transform3DSupport = helpers.transformSupport('3D')\n        }\n\n        // Configure Context Styles\n        if (this.transform3DSupport) {\n            helpers.accelerate(this.element)\n        }\n\n        let style = window.getComputedStyle(this.element)\n        if (style.getPropertyValue('position') === 'static') {\n            this.element.style.position = 'relative'\n        }\n\n        // Pointer events\n        if (!this.pointerEvents) {\n            this.element.style.pointerEvents = 'none'\n        }\n\n        // Setup\n        this.updateLayers()\n        this.updateDimensions()\n        this.enable()\n        this.queueCalibration(this.calibrationDelay)\n    }\n\n    doReadyCallback() {\n        if (this.onReady) {\n            this.onReady()\n        }\n    }\n\n    updateLayers() {\n        if (this.selector) {\n            this.layers = this.element.querySelectorAll(this.selector)\n        } else {\n            this.layers = this.element.children\n        }\n\n        if (!this.layers.length) {\n            console.warn('ParallaxJS: Your scene does not have any layers.')\n        }\n\n        this.depthsX = []\n        this.depthsY = []\n\n        for (let index = 0; index < this.layers.length; index++) {\n            let layer = this.layers[index]\n\n            if (this.transform3DSupport) {\n                helpers.accelerate(layer)\n            }\n\n            if (helpers.data(layer, 'override-css')) {\n                layer.style.position = index ? 'absolute' : 'relative'\n                layer.style.display = 'block'\n                layer.style.left = 0\n                layer.style.top = 0\n            }\n\n            let depth = helpers.data(layer, 'depth') || 0\n            this.depthsX.push(helpers.data(layer, 'depth-x') || depth)\n            this.depthsY.push(helpers.data(layer, 'depth-y') || depth)\n        }\n    }\n\n    updateDimensions() {\n        this.windowWidth = window.innerWidth\n        this.windowHeight = window.innerHeight\n        this.windowCenterX = this.windowWidth * this.originX\n        this.windowCenterY = this.windowHeight * this.originY\n        this.windowRadiusX = Math.max(this.windowCenterX, this.windowWidth - this.windowCenterX)\n        this.windowRadiusY = Math.max(this.windowCenterY, this.windowHeight - this.windowCenterY)\n    }\n\n    updateBounds() {\n        this.bounds = this.inputElement.getBoundingClientRect()\n        this.elementPositionX = this.bounds.left\n        this.elementPositionY = this.bounds.top\n        this.elementWidth = this.bounds.width\n        this.elementHeight = this.bounds.height\n        this.elementCenterX = this.elementWidth * this.originX\n        this.elementCenterY = this.elementHeight * this.originY\n        this.elementRangeX = Math.max(this.elementCenterX, this.elementWidth - this.elementCenterX)\n        this.elementRangeY = Math.max(this.elementCenterY, this.elementHeight - this.elementCenterY)\n    }\n\n    queueCalibration(delay) {\n        clearTimeout(this.calibrationTimer)\n        this.calibrationTimer = setTimeout(this.onCalibrationTimer, delay)\n    }\n\n    enable() {\n        if (this.enabled) {\n            return\n        }\n        this.enabled = true\n\n        if (this.orientationSupport) {\n            this.portrait = false\n            window.addEventListener('deviceorientation', this.onDeviceOrientation)\n            this.detectionTimer = setTimeout(this.onOrientationTimer, this.supportDelay)\n        } else if (this.motionSupport) {\n            this.portrait = false\n            window.addEventListener('devicemotion', this.onDeviceMotion)\n            this.detectionTimer = setTimeout(this.onMotionTimer, this.supportDelay)\n        } else {\n            this.calibrationX = 0\n            this.calibrationY = 0\n            this.portrait = false\n            window.addEventListener('mousemove', this.onMouseMove)\n            this.doReadyCallback()\n        }\n\n        window.addEventListener('resize', this.onWindowResize)\n        this.raf = rqAnFr(this.onAnimationFrame)\n    }\n\n    disable() {\n        if (!this.enabled) {\n            return\n        }\n        this.enabled = false\n\n        if (this.orientationSupport) {\n            window.removeEventListener('deviceorientation', this.onDeviceOrientation)\n        } else if (this.motionSupport) {\n            window.removeEventListener('devicemotion', this.onDeviceMotion)\n        } else {\n            window.removeEventListener('mousemove', this.onMouseMove)\n        }\n\n        window.removeEventListener('resize', this.onWindowResize)\n        rqAnFr.cancel(this.raf)\n    }\n\n    calibrate(x, y) {\n        this.calibrateX = x === undefined ? this.calibrateX : x\n        this.calibrateY = y === undefined ? this.calibrateY : y\n    }\n\n    invert(x, y) {\n        this.invertX = x === undefined ? this.invertX : x\n        this.invertY = y === undefined ? this.invertY : y\n    }\n\n    friction(x, y) {\n        this.frictionX = x === undefined ? this.frictionX : x\n        this.frictionY = y === undefined ? this.frictionY : y\n    }\n\n    scalar(x, y) {\n        this.scalarX = x === undefined ? this.scalarX : x\n        this.scalarY = y === undefined ? this.scalarY : y\n    }\n\n    limit(x, y) {\n        this.limitX = x === undefined ? this.limitX : x\n        this.limitY = y === undefined ? this.limitY : y\n    }\n\n    origin(x, y) {\n        this.originX = x === undefined ? this.originX : x\n        this.originY = y === undefined ? this.originY : y\n    }\n\n    setInputElement(element) {\n        this.inputElement = element\n        this.updateDimensions()\n    }\n\n    setPosition(element, x, y) {\n        x = x.toFixed(this.precision) + 'px'\n        y = y.toFixed(this.precision) + 'px'\n        if (this.transform3DSupport) {\n            helpers.css(element, 'transform', 'translate3d(' + x + ',' + y + ',0)')\n        } else if (this.transform2DSupport) {\n            helpers.css(element, 'transform', 'translate(' + x + ',' + y + ')')\n        } else {\n            element.style.left = x\n            element.style.top = y\n        }\n    }\n\n    onOrientationTimer() {\n        if (this.orientationSupport && this.orientationStatus === 0) {\n            this.disable()\n            this.orientationSupport = false\n            this.enable()\n        } else {\n            this.doReadyCallback()\n        }\n    }\n\n    onMotionTimer() {\n        if (this.motionSupport && this.motionStatus === 0) {\n            this.disable()\n            this.motionSupport = false\n            this.enable()\n        } else {\n            this.doReadyCallback()\n        }\n    }\n\n    onCalibrationTimer() {\n        this.calibrationFlag = true\n    }\n\n    onWindowResize() {\n        this.updateDimensions()\n    }\n\n    onAnimationFrame() {\n        this.updateBounds()\n        let calibratedInputX = this.inputX - this.calibrationX,\n            calibratedInputY = this.inputY - this.calibrationY\n        if ((Math.abs(calibratedInputX) > this.calibrationThreshold) || (Math.abs(calibratedInputY) > this.calibrationThreshold)) {\n            this.queueCalibration(0)\n        }\n        if (this.portrait) {\n            this.motionX = this.calibrateX ? calibratedInputY : this.inputY\n            this.motionY = this.calibrateY ? calibratedInputX : this.inputX\n        } else {\n            this.motionX = this.calibrateX ? calibratedInputX : this.inputX\n            this.motionY = this.calibrateY ? calibratedInputY : this.inputY\n        }\n        this.motionX *= this.elementWidth * (this.scalarX / 100)\n        this.motionY *= this.elementHeight * (this.scalarY / 100)\n        if (!isNaN(parseFloat(this.limitX))) {\n            this.motionX = helpers.clamp(this.motionX, -this.limitX, this.limitX)\n        }\n        if (!isNaN(parseFloat(this.limitY))) {\n            this.motionY = helpers.clamp(this.motionY, -this.limitY, this.limitY)\n        }\n        this.velocityX += (this.motionX - this.velocityX) * this.frictionX\n        this.velocityY += (this.motionY - this.velocityY) * this.frictionY\n        for (let index = 0; index < this.layers.length; index++) {\n            let layer = this.layers[index],\n                depthX = this.depthsX[index],\n                depthY = this.depthsY[index],\n                xOffset = this.velocityX * (depthX * (this.invertX ? -1 : 1)),\n                yOffset = this.velocityY * (depthY * (this.invertY ? -1 : 1))\n            this.setPosition(layer, xOffset, yOffset)\n        }\n        this.raf = rqAnFr(this.onAnimationFrame)\n    }\n\n    rotate(beta, gamma) {\n        // Extract Rotation\n        let x = (beta || 0) / MAGIC_NUMBER, //  -90 :: 90\n            y = (gamma || 0) / MAGIC_NUMBER // -180 :: 180\n\n        // Detect Orientation Change\n        let portrait = this.windowHeight > this.windowWidth\n        if (this.portrait !== portrait) {\n            this.portrait = portrait\n            this.calibrationFlag = true\n        }\n\n        if (this.calibrationFlag) {\n            this.calibrationFlag = false\n            this.calibrationX = x\n            this.calibrationY = y\n        }\n\n        this.inputX = x\n        this.inputY = y\n    }\n\n    onDeviceOrientation(event) {\n        let beta = event.beta\n        let gamma = event.gamma\n        if (beta !== null && gamma !== null) {\n            this.orientationStatus = 1\n            this.rotate(beta, gamma)\n        }\n    }\n\n    onDeviceMotion(event) {\n        let beta = event.rotationRate.beta\n        let gamma = event.rotationRate.gamma\n        if (beta !== null && gamma !== null) {\n            this.motionStatus = 1\n            this.rotate(beta, gamma)\n        }\n    }\n\n    onMouseMove(event) {\n        let clientX = event.clientX,\n            clientY = event.clientY\n\n        // reset input to center if hoverOnly is set and we're not hovering the element\n        if (this.hoverOnly &&\n            ((clientX < this.elementPositionX || clientX > this.elementPositionX + this.elementWidth) ||\n                (clientY < this.elementPositionY || clientY > this.elementPositionY + this.elementHeight))) {\n            this.inputX = 0\n            this.inputY = 0\n            return\n        }\n\n        if (this.relativeInput) {\n            // Clip mouse coordinates inside element bounds.\n            if (this.clipRelativeInput) {\n                clientX = Math.max(clientX, this.elementPositionX)\n                clientX = Math.min(clientX, this.elementPositionX + this.elementWidth)\n                clientY = Math.max(clientY, this.elementPositionY)\n                clientY = Math.min(clientY, this.elementPositionY + this.elementHeight)\n            }\n            // Calculate input relative to the element.\n            if (this.elementRangeX && this.elementRangeY) {\n                this.inputX = (clientX - this.elementPositionX - this.elementCenterX) / this.elementRangeX\n                this.inputY = (clientY - this.elementPositionY - this.elementCenterY) / this.elementRangeY\n            }\n        } else {\n            // Calculate input relative to the window.\n            if (this.windowRadiusX && this.windowRadiusY) {\n                this.inputX = (clientX - this.windowCenterX) / this.windowRadiusX\n                this.inputY = (clientY - this.windowCenterY) / this.windowRadiusY\n            }\n        }\n    }\n\n    destroy() {\n        this.disable()\n\n        clearTimeout(this.calibrationTimer)\n        clearTimeout(this.detectionTimer)\n\n        this.element.removeAttribute('style')\n        for (let index = 0; index < this.layers.length; index++) {\n            this.layers[index].removeAttribute('style')\n        }\n\n        delete this.element\n        delete this.layers\n    }\n\n    version() {\n        return '3.1.0'\n    }\n\n}\n\nmodule.exports = Parallax","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(\"Typewriter\",[],t):\"object\"==typeof exports?exports.Typewriter=t():e.Typewriter=t()}(\"undefined\"!=typeof self?self:this,(function(){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=3)}([,function(e,t,n){(function(t){for(var r=n(11),o=\"undefined\"==typeof window?t:window,i=[\"moz\",\"webkit\"],a=\"AnimationFrame\",s=o[\"request\"+a],u=o[\"cancel\"+a]||o[\"cancelRequest\"+a],c=0;!s&&c<i.length;c++)s=o[i[c]+\"Request\"+a],u=o[i[c]+\"Cancel\"+a]||o[i[c]+\"CancelRequest\"+a];if(!s||!u){var l=0,p=0,d=[];s=function(e){if(0===d.length){var t=r(),n=Math.max(0,1e3/60-(t-l));l=n+t,setTimeout((function(){var e=d.slice(0);d.length=0;for(var t=0;t<e.length;t++)if(!e[t].cancelled)try{e[t].callback(l)}catch(e){setTimeout((function(){throw e}),0)}}),Math.round(n))}return d.push({handle:++p,callback:e,cancelled:!1}),p},u=function(e){for(var t=0;t<d.length;t++)d[t].handle===e&&(d[t].cancelled=!0)}}e.exports=function(e){return s.call(o,e)},e.exports.cancel=function(){u.apply(o,arguments)},e.exports.polyfill=function(e){e||(e=o),e.requestAnimationFrame=s,e.cancelAnimationFrame=u}}).call(this,n(4))},,function(e,t,n){\"use strict\";n.r(t),n.d(t,\"default\",(function(){return O}));var r=n(1),o=n.n(r),i=function(e){return new RegExp(/<[a-z][\\s\\S]*>/i).test(e)},a=function(e){var t=document.createElement(\"div\");return t.innerHTML=e,t.childNodes},s=function(e,t){return Math.floor(Math.random()*(t-e+1))+e},u=function(e){var t=document.createElement(\"style\");t.appendChild(document.createTextNode(e)),document.head.appendChild(t)},c=\"TYPE_CHARACTER\",l=\"REMOVE_CHARACTER\",p=\"REMOVE_ALL\",d=\"REMOVE_LAST_VISIBLE_NODE\",f=\"PAUSE_FOR\",v=\"CALL_FUNCTION\",h=\"ADD_HTML_TAG_ELEMENT\",m=\"CHANGE_DELETE_SPEED\",y=\"CHANGE_DELAY\",g=\"CHANGE_CURSOR\",w=\"PASTE_STRING\",T=\"HTML_TAG\",E=\"TEXT_NODE\";function b(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function A(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?b(Object(n),!0).forEach((function(t){_(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):b(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function S(e){return function(e){if(Array.isArray(e))return N(e)}(e)||function(e){if(\"undefined\"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function(e,t){if(!e)return;if(\"string\"==typeof e)return N(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);\"Object\"===n&&e.constructor&&(n=e.constructor.name);if(\"Map\"===n||\"Set\"===n)return Array.from(e);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return N(e,t)}(e)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function N(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function _(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var O=function(){function e(t,n){var u=this;if(function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),_(this,\"state\",{cursorAnimation:null,lastFrameTime:null,pauseUntil:null,eventQueue:[],eventLoop:null,eventLoopPaused:!1,reverseCalledEvents:[],calledEvents:[],visibleNodes:[],initialOptions:null,elements:{container:null,wrapper:document.createElement(\"span\"),cursor:document.createElement(\"span\")}}),_(this,\"options\",{strings:null,cursor:\"|\",delay:\"natural\",pauseFor:1500,deleteSpeed:\"natural\",loop:!1,autoStart:!1,devMode:!1,skipAddStyles:!1,wrapperClassName:\"Typewriter__wrapper\",cursorClassName:\"Typewriter__cursor\",stringSplitter:null,onCreateTextNode:null,onRemoveNode:null}),_(this,\"setupWrapperElement\",(function(){u.state.elements.container&&(u.state.elements.wrapper.className=u.options.wrapperClassName,u.state.elements.cursor.className=u.options.cursorClassName,u.state.elements.cursor.innerHTML=u.options.cursor,u.state.elements.container.innerHTML=\"\",u.state.elements.container.appendChild(u.state.elements.wrapper),u.state.elements.container.appendChild(u.state.elements.cursor))})),_(this,\"start\",(function(){return u.state.eventLoopPaused=!1,u.runEventLoop(),u})),_(this,\"pause\",(function(){return u.state.eventLoopPaused=!0,u})),_(this,\"stop\",(function(){return u.state.eventLoop&&(Object(r.cancel)(u.state.eventLoop),u.state.eventLoop=null),u})),_(this,\"pauseFor\",(function(e){return u.addEventToQueue(f,{ms:e}),u})),_(this,\"typeOutAllStrings\",(function(){return\"string\"==typeof u.options.strings?(u.typeString(u.options.strings).pauseFor(u.options.pauseFor),u):(u.options.strings.forEach((function(e){u.typeString(e).pauseFor(u.options.pauseFor).deleteAll(u.options.deleteSpeed)})),u)})),_(this,\"typeString\",(function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(i(e))return u.typeOutHTMLString(e,t);if(e){var n=u.options||{},r=n.stringSplitter,o=\"function\"==typeof r?r(e):e.split(\"\");u.typeCharacters(o,t)}return u})),_(this,\"pasteString\",(function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return i(e)?u.typeOutHTMLString(e,t,!0):(e&&u.addEventToQueue(w,{character:e,node:t}),u)})),_(this,\"typeOutHTMLString\",(function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2?arguments[2]:void 0,r=a(e);if(r.length>0)for(var o=0;o<r.length;o++){var i=r[o],s=i.innerHTML;i&&3!==i.nodeType?(i.innerHTML=\"\",u.addEventToQueue(h,{node:i,parentNode:t}),n?u.pasteString(s,i):u.typeString(s,i)):i.textContent&&(n?u.pasteString(i.textContent,t):u.typeString(i.textContent,t))}return u})),_(this,\"deleteAll\",(function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"natural\";return u.addEventToQueue(p,{speed:e}),u})),_(this,\"changeDeleteSpeed\",(function(e){if(!e)throw new Error(\"Must provide new delete speed\");return u.addEventToQueue(m,{speed:e}),u})),_(this,\"changeDelay\",(function(e){if(!e)throw new Error(\"Must provide new delay\");return u.addEventToQueue(y,{delay:e}),u})),_(this,\"changeCursor\",(function(e){if(!e)throw new Error(\"Must provide new cursor\");return u.addEventToQueue(g,{cursor:e}),u})),_(this,\"deleteChars\",(function(e){if(!e)throw new Error(\"Must provide amount of characters to delete\");for(var t=0;t<e;t++)u.addEventToQueue(l);return u})),_(this,\"callFunction\",(function(e,t){if(!e||\"function\"!=typeof e)throw new Error(\"Callbak must be a function\");return u.addEventToQueue(v,{cb:e,thisArg:t}),u})),_(this,\"typeCharacters\",(function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(!e||!Array.isArray(e))throw new Error(\"Characters must be an array\");return e.forEach((function(e){u.addEventToQueue(c,{character:e,node:t})})),u})),_(this,\"removeCharacters\",(function(e){if(!e||!Array.isArray(e))throw new Error(\"Characters must be an array\");return e.forEach((function(){u.addEventToQueue(l)})),u})),_(this,\"addEventToQueue\",(function(e,t){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return u.addEventToStateProperty(e,t,n,\"eventQueue\")})),_(this,\"addReverseCalledEvent\",(function(e,t){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=u.options.loop;return r?u.addEventToStateProperty(e,t,n,\"reverseCalledEvents\"):u})),_(this,\"addEventToStateProperty\",(function(e,t){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3?arguments[3]:void 0,o={eventName:e,eventArgs:t||{}};return u.state[r]=n?[o].concat(S(u.state[r])):[].concat(S(u.state[r]),[o]),u})),_(this,\"runEventLoop\",(function(){u.state.lastFrameTime||(u.state.lastFrameTime=Date.now());var e=Date.now(),t=e-u.state.lastFrameTime;if(!u.state.eventQueue.length){if(!u.options.loop)return;u.state.eventQueue=S(u.state.calledEvents),u.state.calledEvents=[],u.options=A({},u.state.initialOptions)}if(u.state.eventLoop=o()(u.runEventLoop),!u.state.eventLoopPaused){if(u.state.pauseUntil){if(e<u.state.pauseUntil)return;u.state.pauseUntil=null}var n=S(u.state.eventQueue),r=n.shift(),i=0;if(!(t<=(i=r.eventName===d||r.eventName===l?\"natural\"===u.options.deleteSpeed?s(40,80):u.options.deleteSpeed:\"natural\"===u.options.delay?s(120,160):u.options.delay))){var a=r.eventName,b=r.eventArgs;switch(u.logInDevMode({currentEvent:r,state:u.state,delay:i}),a){case w:case c:var N=b.character,C=b.node,_=document.createTextNode(N),O=_;u.options.onCreateTextNode&&\"function\"==typeof u.options.onCreateTextNode&&(O=u.options.onCreateTextNode(N,_)),O&&(C?C.appendChild(O):u.state.elements.wrapper.appendChild(O)),u.state.visibleNodes=[].concat(S(u.state.visibleNodes),[{type:E,character:N,node:O}]);break;case l:n.unshift({eventName:d,eventArgs:{removingCharacterNode:!0}});break;case f:var L=r.eventArgs.ms;u.state.pauseUntil=Date.now()+parseInt(L);break;case v:var M=r.eventArgs,x=M.cb,j=M.thisArg;x.call(j,{elements:u.state.elements});break;case h:var D=r.eventArgs,P=D.node,k=D.parentNode;k?k.appendChild(P):u.state.elements.wrapper.appendChild(P),u.state.visibleNodes=[].concat(S(u.state.visibleNodes),[{type:T,node:P,parentNode:k||u.state.elements.wrapper}]);break;case p:var R=u.state.visibleNodes,Q=b.speed,F=[];Q&&F.push({eventName:m,eventArgs:{speed:Q,temp:!0}});for(var H=0,I=R.length;H<I;H++)F.push({eventName:d,eventArgs:{removingCharacterNode:!1}});Q&&F.push({eventName:m,eventArgs:{speed:u.options.deleteSpeed,temp:!0}}),n.unshift.apply(n,F);break;case d:var U=r.eventArgs.removingCharacterNode;if(u.state.visibleNodes.length){var q=u.state.visibleNodes.pop(),G=q.type,Y=q.node,V=q.character;u.options.onRemoveNode&&\"function\"==typeof u.options.onRemoveNode&&u.options.onRemoveNode({node:Y,character:V}),Y&&Y.parentNode.removeChild(Y),G===T&&U&&n.unshift({eventName:d,eventArgs:{}})}break;case m:u.options.deleteSpeed=r.eventArgs.speed;break;case y:u.options.delay=r.eventArgs.delay;break;case g:u.options.cursor=r.eventArgs.cursor,u.state.elements.cursor.innerHTML=r.eventArgs.cursor}u.options.loop&&(r.eventName===d||r.eventArgs&&r.eventArgs.temp||(u.state.calledEvents=[].concat(S(u.state.calledEvents),[r]))),u.state.eventQueue=n,u.state.lastFrameTime=e}}})),t)if(\"string\"==typeof t){var b=document.querySelector(t);if(!b)throw new Error(\"Could not find container element\");this.state.elements.container=b}else this.state.elements.container=t;n&&(this.options=A(A({},this.options),n)),this.state.initialOptions=A({},this.options),this.init()}var t,n,b;return t=e,(n=[{key:\"init\",value:function(){this.setupWrapperElement(),this.addEventToQueue(g,{cursor:this.options.cursor},!0),this.addEventToQueue(p,null,!0),!window||window.___TYPEWRITER_JS_STYLES_ADDED___||this.options.skipAddStyles||(u(\".Typewriter__cursor{-webkit-animation:Typewriter-cursor 1s infinite;animation:Typewriter-cursor 1s infinite;margin-left:1px}@-webkit-keyframes Typewriter-cursor{0%{opacity:0}50%{opacity:1}100%{opacity:0}}@keyframes Typewriter-cursor{0%{opacity:0}50%{opacity:1}100%{opacity:0}}\"),window.___TYPEWRITER_JS_STYLES_ADDED___=!0),!0===this.options.autoStart&&this.options.strings&&this.typeOutAllStrings().start()}},{key:\"logInDevMode\",value:function(e){this.options.devMode&&console.log(e)}}])&&C(t.prototype,n),b&&C(t,b),e}()},function(e,t){var n;n=function(){return this}();try{n=n||new Function(\"return this\")()}catch(e){\"object\"==typeof window&&(n=window)}e.exports=n},,,,,,,function(e,t,n){(function(t){(function(){var n,r,o,i,a,s;\"undefined\"!=typeof performance&&null!==performance&&performance.now?e.exports=function(){return performance.now()}:null!=t&&t.hrtime?(e.exports=function(){return(n()-a)/1e6},r=t.hrtime,i=(n=function(){var e;return 1e9*(e=r())[0]+e[1]})(),s=1e9*t.uptime(),a=i-s):Date.now?(e.exports=function(){return Date.now()-o},o=Date.now()):(e.exports=function(){return(new Date).getTime()-o},o=(new Date).getTime())}).call(this)}).call(this,n(12))},function(e,t){var n,r,o=e.exports={};function i(){throw new Error(\"setTimeout has not been defined\")}function a(){throw new Error(\"clearTimeout has not been defined\")}function s(e){if(n===setTimeout)return setTimeout(e,0);if((n===i||!n)&&setTimeout)return n=setTimeout,setTimeout(e,0);try{return n(e,0)}catch(t){try{return n.call(null,e,0)}catch(t){return n.call(this,e,0)}}}!function(){try{n=\"function\"==typeof setTimeout?setTimeout:i}catch(e){n=i}try{r=\"function\"==typeof clearTimeout?clearTimeout:a}catch(e){r=a}}();var u,c=[],l=!1,p=-1;function d(){l&&u&&(l=!1,u.length?c=u.concat(c):p=-1,c.length&&f())}function f(){if(!l){var e=s(d);l=!0;for(var t=c.length;t;){for(u=c,c=[];++p<t;)u&&u[p].run();p=-1,t=c.length}u=null,l=!1,function(e){if(r===clearTimeout)return clearTimeout(e);if((r===a||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(e);try{r(e)}catch(t){try{return r.call(null,e)}catch(t){return r.call(this,e)}}}(e)}}function v(e,t){this.fun=e,this.array=t}function h(){}o.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];c.push(new v(e,t)),1!==c.length||l||s(f)},v.prototype.run=function(){this.fun.apply(null,this.array)},o.title=\"browser\",o.browser=!0,o.env={},o.argv=[],o.version=\"\",o.versions={},o.on=h,o.addListener=h,o.once=h,o.off=h,o.removeListener=h,o.removeAllListeners=h,o.emit=h,o.prependListener=h,o.prependOnceListener=h,o.listeners=function(e){return[]},o.binding=function(e){throw new Error(\"process.binding is not supported\")},o.cwd=function(){return\"/\"},o.chdir=function(e){throw new Error(\"process.chdir is not supported\")},o.umask=function(){return 0}}]).default}));","/**\r\n * alertifyjs 1.13.1 http://alertifyjs.com\r\n * AlertifyJS is a javascript framework for developing pretty browser dialogs and notifications.\r\n * Copyright 2019 Mohammad Younes <Mohammad@alertifyjs.com> (http://alertifyjs.com) \r\n * Licensed under GPL 3 <https://opensource.org/licenses/gpl-3.0>*/\r\n( function ( window ) {\r\n    'use strict';\r\n    var NOT_DISABLED_NOT_RESET = ':not(:disabled):not(.ajs-reset)';\r\n    /**\r\n     * Keys enum\r\n     * @type {Object}\r\n     */\r\n    var keys = {\r\n        ENTER: 13,\r\n        ESC: 27,\r\n        F1: 112,\r\n        F12: 123,\r\n        LEFT: 37,\r\n        RIGHT: 39,\r\n        TAB: 9\r\n    };\r\n    /**\r\n     * Default options \r\n     * @type {Object}\r\n     */\r\n    var defaults = {\r\n        autoReset:true,\r\n        basic:false,\r\n        closable:true,\r\n        closableByDimmer:true,\r\n        invokeOnCloseOff:false,\r\n        frameless:false,\r\n        defaultFocusOff:false,\r\n        maintainFocus:true, //global default not per instance, applies to all dialogs\r\n        maximizable:true,\r\n        modal:true,\r\n        movable:true,\r\n        moveBounded:false,\r\n        overflow:true,\r\n        padding: true,\r\n        pinnable:true,\r\n        pinned:true,\r\n        preventBodyShift:false, //global default not per instance, applies to all dialogs\r\n        resizable:true,\r\n        startMaximized:false,\r\n        transition:'pulse',\r\n        transitionOff:false,\r\n        tabbable:['button', '[href]', 'input', 'select', 'textarea', '[tabindex]:not([tabindex^=\"-\"])'+NOT_DISABLED_NOT_RESET].join(NOT_DISABLED_NOT_RESET+','),//global\r\n        notifier:{\r\n            delay:5,\r\n            position:'bottom-right',\r\n            closeButton:false,\r\n            classes: {\r\n                base: 'alertify-notifier',\r\n                prefix:'ajs-',\r\n                message: 'ajs-message',\r\n                top: 'ajs-top',\r\n                right: 'ajs-right',\r\n                bottom: 'ajs-bottom',\r\n                left: 'ajs-left',\r\n                center: 'ajs-center',\r\n                visible: 'ajs-visible',\r\n                hidden: 'ajs-hidden',\r\n                close: 'ajs-close'\r\n            }\r\n        },\r\n        glossary:{\r\n            title:'AlertifyJS',\r\n            ok: 'OK',\r\n            cancel: 'Cancel',\r\n            acccpt: 'Accept',\r\n            deny: 'Deny',\r\n            confirm: 'Confirm',\r\n            decline: 'Decline',\r\n            close: 'Close',\r\n            maximize: 'Maximize',\r\n            restore: 'Restore',\r\n        },\r\n        theme:{\r\n            input:'ajs-input',\r\n            ok:'ajs-ok',\r\n            cancel:'ajs-cancel',\r\n        },\r\n        hooks:{\r\n            preinit:function(){},\r\n            postinit:function(){}\r\n        }\r\n    };\r\n    \r\n    //holds open dialogs instances\r\n    var openDialogs = [];\r\n\r\n    /**\r\n     * [Helper]  Adds the specified class(es) to the element.\r\n     *\r\n     * @element {node}      The element\r\n     * @className {string}  One or more space-separated classes to be added to the class attribute of the element.\r\n     * \r\n     * @return {undefined}\r\n     */\r\n    function addClass(element,classNames){\r\n        element.className += ' ' + classNames;\r\n    }\r\n    \r\n    /**\r\n     * [Helper]  Removes the specified class(es) from the element.\r\n     *\r\n     * @element {node}      The element\r\n     * @className {string}  One or more space-separated classes to be removed from the class attribute of the element.\r\n     * \r\n     * @return {undefined}\r\n     */\r\n    function removeClass(element, classNames) {\r\n        var original = element.className.split(' ');\r\n        var toBeRemoved = classNames.split(' ');\r\n        for (var x = 0; x < toBeRemoved.length; x += 1) {\r\n            var index = original.indexOf(toBeRemoved[x]);\r\n            if (index > -1){\r\n                original.splice(index,1);\r\n            }\r\n        }\r\n        element.className = original.join(' ');\r\n    }\r\n\r\n    /**\r\n     * [Helper]  Checks if the document is RTL\r\n     *\r\n     * @return {Boolean} True if the document is RTL, false otherwise.\r\n     */\r\n    function isRightToLeft(){\r\n        return window.getComputedStyle(document.body).direction === 'rtl';\r\n    }\r\n    /**\r\n     * [Helper]  Get the document current scrollTop\r\n     *\r\n     * @return {Number} current document scrollTop value\r\n     */\r\n    function getScrollTop(){\r\n        return ((document.documentElement && document.documentElement.scrollTop) || document.body.scrollTop);\r\n    }\r\n\r\n    /**\r\n     * [Helper]  Get the document current scrollLeft\r\n     *\r\n     * @return {Number} current document scrollLeft value\r\n     */\r\n    function getScrollLeft(){\r\n        return ((document.documentElement && document.documentElement.scrollLeft) || document.body.scrollLeft);\r\n    }\r\n\r\n    /**\r\n    * Helper: clear contents\r\n    *\r\n    */\r\n    function clearContents(element){\r\n        while (element.lastChild) {\r\n            element.removeChild(element.lastChild);\r\n        }\r\n    }\r\n    /**\r\n     * Extends a given prototype by merging properties from base into sub.\r\n     *\r\n     * @sub {Object} sub The prototype being overwritten.\r\n     * @base {Object} base The prototype being written.\r\n     *\r\n     * @return {Object} The extended prototype.\r\n     */\r\n    function copy(src) {\r\n        if(null === src){\r\n            return src;\r\n        }\r\n        var cpy;\r\n        if(Array.isArray(src)){\r\n            cpy = [];\r\n            for(var x=0;x<src.length;x+=1){\r\n                cpy.push(copy(src[x]));\r\n            }\r\n            return cpy;\r\n        }\r\n      \r\n        if(src instanceof Date){\r\n            return new Date(src.getTime());\r\n        }\r\n      \r\n        if(src instanceof RegExp){\r\n            cpy = new RegExp(src.source);\r\n            cpy.global = src.global;\r\n            cpy.ignoreCase = src.ignoreCase;\r\n            cpy.multiline = src.multiline;\r\n            cpy.lastIndex = src.lastIndex;\r\n            return cpy;\r\n        }\r\n        \r\n        if(typeof src === 'object'){\r\n            cpy = {};\r\n            // copy dialog pototype over definition.\r\n            for (var prop in src) {\r\n                if (src.hasOwnProperty(prop)) {\r\n                    cpy[prop] = copy(src[prop]);\r\n                }\r\n            }\r\n            return cpy;\r\n        }\r\n        return src;\r\n    }\r\n    /**\r\n      * Helper: destruct the dialog\r\n      *\r\n      */\r\n    function destruct(instance, initialize){\r\n        if(instance.elements){\r\n            //delete the dom and it's references.\r\n            var root = instance.elements.root;\r\n            root.parentNode.removeChild(root);\r\n            delete instance.elements;\r\n            //copy back initial settings.\r\n            instance.settings = copy(instance.__settings);\r\n            //re-reference init function.\r\n            instance.__init = initialize;\r\n            //delete __internal variable to allow re-initialization.\r\n            delete instance.__internal;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Test to check if passive event listeners are supported.\r\n     */\r\n    var IsPassiveSupported = false;\r\n    try {\r\n        var options = Object.defineProperty({}, 'passive', {\r\n            get: function () {\r\n                IsPassiveSupported = true;\r\n            }\r\n        });\r\n        window.addEventListener('test', options, options);\r\n        window.removeEventListener('test', options, options);\r\n    } catch (e) {}\r\n\r\n     /**\r\n     * Removes an event listener\r\n     *\r\n     * @param {HTMLElement} el The EventTarget to register the listenr on.\r\n     * @param {string} event The event type to listen for.\r\n     * @param {Function} handler The function to handle the event.\r\n     * @param {boolean} useCapture Specifices if the event to be dispatched to the registered listener before being dispatched to any EventTarget beneath it in the DOM tree.\r\n     * @param {boolean} passive A Boolean which, if true, indicates that the function specified by listener will never call preventDefault().\r\n     */\r\n    var on = function (el, event, fn, useCapture, passive) {\r\n        el.addEventListener(event, fn, IsPassiveSupported ? { capture: useCapture, passive: passive } : useCapture === true);\r\n    };\r\n\r\n    /**\r\n     * Removes an event listener\r\n     *\r\n     * @param {HTMLElement} el The EventTarget to unregister the listenr from.\r\n     * @param {string} event The event type to remove.\r\n     * @param {Function} fn The event handler to remove.\r\n     * @param {boolean} useCapture Specifices if the event to be dispatched to the registered listener before being dispatched to any EventTarget beneath it in the DOM tree.\r\n     * @param {boolean} passive A Boolean which, if true, indicates that the function specified by listener will never call preventDefault().\r\n     */\r\n    var off = function (el, event, fn, useCapture, passive) {\r\n        el.removeEventListener(event, fn, IsPassiveSupported ? { capture: useCapture, passive: passive } : useCapture === true);\r\n    };\r\n\r\n    /**\r\n     * Prevent default event from firing\r\n     *\r\n     * @param  {Event} event Event object\r\n     * @return {undefined}\r\n\r\n    function prevent ( event ) {\r\n        if ( event ) {\r\n            if ( event.preventDefault ) {\r\n                event.preventDefault();\r\n            } else {\r\n                event.returnValue = false;\r\n            }\r\n        }\r\n    }\r\n    */\r\n    var transition = (function () {\r\n        var t, type;\r\n        var supported = false;\r\n        var transitions = {\r\n            'animation'        : 'animationend',\r\n            'OAnimation'       : 'oAnimationEnd oanimationend',\r\n            'msAnimation'      : 'MSAnimationEnd',\r\n            'MozAnimation'     : 'animationend',\r\n            'WebkitAnimation'  : 'webkitAnimationEnd'\r\n        };\r\n\r\n        for (t in transitions) {\r\n            if (document.documentElement.style[t] !== undefined) {\r\n                type = transitions[t];\r\n                supported = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return {\r\n            type: type,\r\n            supported: supported\r\n        };\r\n    }());\r\n\r\n    /**\r\n    * Creates event handler delegate that sends the instance as last argument.\r\n    * \r\n    * @return {Function}    a function wrapper which sends the instance as last argument.\r\n    */\r\n    function delegate(context, method) {\r\n        return function () {\r\n            if (arguments.length > 0) {\r\n                var args = [];\r\n                for (var x = 0; x < arguments.length; x += 1) {\r\n                    args.push(arguments[x]);\r\n                }\r\n                args.push(context);\r\n                return method.apply(context, args);\r\n            }\r\n            return method.apply(context, [null, context]);\r\n        };\r\n    }\r\n    /**\r\n    * Helper for creating a dialog close event.\r\n    * \r\n    * @return {object}\r\n    */\r\n    function createCloseEvent(index, button) {\r\n        return {\r\n            index: index,\r\n            button: button,\r\n            cancel: false\r\n        };\r\n    }\r\n    /**\r\n    * Helper for dispatching events.\r\n    *\r\n    * @param  {string} evenType The type of the event to disptach.\r\n    * @param  {object} instance The dialog instance disptaching the event.\r\n    *\r\n    * @return   {any}   The result of the invoked function.\r\n    */\r\n    function dispatchEvent(eventType, instance) {\r\n        if ( typeof instance.get(eventType) === 'function' ) {\r\n            return instance.get(eventType).call(instance);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Super class for all dialogs\r\n     *\r\n     * @return {Object}\t\tbase dialog prototype\r\n     */\r\n    var dialog = (function () {\r\n        var //holds the list of used keys.\r\n            usedKeys = [],\r\n            //dummy variable, used to trigger dom reflow.\r\n            reflow = null,\r\n            //holds body tab index in case it has any.\r\n            tabindex = false,\r\n            //condition for detecting safari\r\n            isSafari = window.navigator.userAgent.indexOf('Safari') > -1 && window.navigator.userAgent.indexOf('Chrome') < 0,\r\n            //dialog building blocks\r\n            templates = {\r\n                dimmer:'<div class=\"ajs-dimmer\"></div>',\r\n                /*tab index required to fire click event before body focus*/\r\n                modal: '<div class=\"ajs-modal\" tabindex=\"0\"></div>',\r\n                dialog: '<div class=\"ajs-dialog\" tabindex=\"0\"></div>',\r\n                reset: '<button class=\"ajs-reset\"></button>',\r\n                commands: '<div class=\"ajs-commands\"><button class=\"ajs-pin\"></button><button class=\"ajs-maximize\"></button><button class=\"ajs-close\"></button></div>',\r\n                header: '<div class=\"ajs-header\"></div>',\r\n                body: '<div class=\"ajs-body\"></div>',\r\n                content: '<div class=\"ajs-content\"></div>',\r\n                footer: '<div class=\"ajs-footer\"></div>',\r\n                buttons: { primary: '<div class=\"ajs-primary ajs-buttons\"></div>', auxiliary: '<div class=\"ajs-auxiliary ajs-buttons\"></div>' },\r\n                button: '<button class=\"ajs-button\"></button>',\r\n                resizeHandle: '<div class=\"ajs-handle\"></div>',\r\n            },\r\n            //common class names\r\n            classes = {\r\n                animationIn: 'ajs-in',\r\n                animationOut: 'ajs-out',\r\n                base: 'alertify',\r\n                basic:'ajs-basic',\r\n                capture: 'ajs-capture',\r\n                closable:'ajs-closable',\r\n                fixed: 'ajs-fixed',\r\n                frameless:'ajs-frameless',\r\n                hidden: 'ajs-hidden',\r\n                maximize: 'ajs-maximize',\r\n                maximized: 'ajs-maximized',\r\n                maximizable:'ajs-maximizable',\r\n                modeless: 'ajs-modeless',\r\n                movable: 'ajs-movable',\r\n                noSelection: 'ajs-no-selection',\r\n                noOverflow: 'ajs-no-overflow',\r\n                noPadding:'ajs-no-padding',\r\n                pin:'ajs-pin',\r\n                pinnable:'ajs-pinnable',\r\n                prefix: 'ajs-',\r\n                resizable: 'ajs-resizable',\r\n                restore: 'ajs-restore',\r\n                shake:'ajs-shake',\r\n                unpinned:'ajs-unpinned',\r\n                noTransition:'ajs-no-transition'\r\n            };\r\n\r\n        /**\r\n         * Helper: initializes the dialog instance\r\n         * \r\n         * @return\t{Number}\tThe total count of currently open modals.\r\n         */\r\n        function initialize(instance){\r\n            \r\n            if(!instance.__internal){\r\n                //invoke preinit global hook\r\n                alertify.defaults.hooks.preinit(instance);\r\n                //no need to expose init after this.\r\n                delete instance.__init;\r\n              \r\n                //keep a copy of initial dialog settings\r\n                if(!instance.__settings){\r\n                    instance.__settings = copy(instance.settings);\r\n                }\r\n                \r\n                //get dialog buttons/focus setup\r\n                var setup;\r\n                if(typeof instance.setup === 'function'){\r\n                    setup = instance.setup();\r\n                    setup.options = setup.options  || {};\r\n                    setup.focus = setup.focus  || {};\r\n                }else{\r\n                    setup = {\r\n                        buttons:[],\r\n                        focus:{\r\n                            element:null,\r\n                            select:false\r\n                        },\r\n                        options:{\r\n                        }\r\n                    };\r\n                }\r\n                \r\n                //initialize hooks object.\r\n                if(typeof instance.hooks !== 'object'){\r\n                    instance.hooks = {};\r\n                }\r\n\r\n                //copy buttons defintion\r\n                var buttonsDefinition = [];\r\n                if(Array.isArray(setup.buttons)){\r\n                    for(var b=0;b<setup.buttons.length;b+=1){\r\n                        var ref  = setup.buttons[b],\r\n                            cpy = {};\r\n                        for (var i in ref) {\r\n                            if (ref.hasOwnProperty(i)) {\r\n                                cpy[i] = ref[i];\r\n                            }\r\n                        }\r\n                        buttonsDefinition.push(cpy);\r\n                    }\r\n                }\r\n\r\n                var internal = instance.__internal = {\r\n                    /**\r\n                     * Flag holding the open state of the dialog\r\n                     * \r\n                     * @type {Boolean}\r\n                     */\r\n                    isOpen:false,\r\n                    /**\r\n                     * Active element is the element that will receive focus after\r\n                     * closing the dialog. It defaults as the body tag, but gets updated\r\n                     * to the last focused element before the dialog was opened.\r\n                     *\r\n                     * @type {Node}\r\n                     */\r\n                    activeElement:document.body,\r\n                    timerIn:undefined,\r\n                    timerOut:undefined,\r\n                    buttons: buttonsDefinition,\r\n                    focus: setup.focus,\r\n                    options: {\r\n                        title: undefined,\r\n                        modal: undefined,\r\n                        basic:undefined,\r\n                        frameless:undefined,\r\n                        defaultFocusOff:undefined,\r\n                        pinned: undefined,\r\n                        movable: undefined,\r\n                        moveBounded:undefined,\r\n                        resizable: undefined,\r\n                        autoReset: undefined,\r\n                        closable: undefined,\r\n                        closableByDimmer: undefined,\r\n                        invokeOnCloseOff:undefined,\r\n                        maximizable: undefined,\r\n                        startMaximized: undefined,\r\n                        pinnable: undefined,\r\n                        transition: undefined,\r\n                        transitionOff: undefined,\r\n                        padding:undefined,\r\n                        overflow:undefined,\r\n                        onshow:undefined,\r\n                        onclosing:undefined,\r\n                        onclose:undefined,\r\n                        onfocus:undefined,\r\n                        onmove:undefined,\r\n                        onmoved:undefined,\r\n                        onresize:undefined,\r\n                        onresized:undefined,\r\n                        onmaximize:undefined,\r\n                        onmaximized:undefined,\r\n                        onrestore:undefined,\r\n                        onrestored:undefined\r\n                    },\r\n                    resetHandler:undefined,\r\n                    beginMoveHandler:undefined,\r\n                    beginResizeHandler:undefined,\r\n                    bringToFrontHandler:undefined,\r\n                    modalClickHandler:undefined,\r\n                    buttonsClickHandler:undefined,\r\n                    commandsClickHandler:undefined,\r\n                    transitionInHandler:undefined,\r\n                    transitionOutHandler:undefined,\r\n                    destroy:undefined\r\n                };\r\n\r\n                var elements = {};\r\n                //root node\r\n                elements.root = document.createElement('div');\r\n                //prevent FOUC in case of async styles loading.\r\n                elements.root.style.display = 'none';\r\n                elements.root.className = classes.base + ' ' + classes.hidden + ' ';\r\n\r\n                elements.root.innerHTML = templates.dimmer + templates.modal;\r\n                \r\n                //dimmer\r\n                elements.dimmer = elements.root.firstChild;\r\n\r\n                //dialog\r\n                elements.modal = elements.root.lastChild;\r\n                elements.modal.innerHTML = templates.dialog;\r\n                elements.dialog = elements.modal.firstChild;\r\n                elements.dialog.innerHTML = templates.reset + templates.commands + templates.header + templates.body + templates.footer + templates.resizeHandle + templates.reset;\r\n\r\n                //reset links\r\n                elements.reset = [];\r\n                elements.reset.push(elements.dialog.firstChild);\r\n                elements.reset.push(elements.dialog.lastChild);\r\n                \r\n                //commands\r\n                elements.commands = {};\r\n                elements.commands.container = elements.reset[0].nextSibling;\r\n                elements.commands.pin = elements.commands.container.firstChild;\r\n                elements.commands.maximize = elements.commands.pin.nextSibling;\r\n                elements.commands.close = elements.commands.maximize.nextSibling;\r\n                \r\n                //header\r\n                elements.header = elements.commands.container.nextSibling;\r\n\r\n                //body\r\n                elements.body = elements.header.nextSibling;\r\n                elements.body.innerHTML = templates.content;\r\n                elements.content = elements.body.firstChild;\r\n\r\n                //footer\r\n                elements.footer = elements.body.nextSibling;\r\n                elements.footer.innerHTML = templates.buttons.auxiliary + templates.buttons.primary;\r\n                \r\n                //resize handle\r\n                elements.resizeHandle = elements.footer.nextSibling;\r\n\r\n                //buttons\r\n                elements.buttons = {};\r\n                elements.buttons.auxiliary = elements.footer.firstChild;\r\n                elements.buttons.primary = elements.buttons.auxiliary.nextSibling;\r\n                elements.buttons.primary.innerHTML = templates.button;\r\n                elements.buttonTemplate = elements.buttons.primary.firstChild;\r\n                //remove button template\r\n                elements.buttons.primary.removeChild(elements.buttonTemplate);\r\n                               \r\n                for(var x=0; x < instance.__internal.buttons.length; x+=1) {\r\n                    var button = instance.__internal.buttons[x];\r\n                    \r\n                    // add to the list of used keys.\r\n                    if(usedKeys.indexOf(button.key) < 0){\r\n                        usedKeys.push(button.key);\r\n                    }\r\n\r\n                    button.element = elements.buttonTemplate.cloneNode();\r\n                    button.element.innerHTML = button.text;\r\n                    if(typeof button.className === 'string' &&  button.className !== ''){\r\n                        addClass(button.element, button.className);\r\n                    }\r\n                    for(var key in button.attrs){\r\n                        if(key !== 'className' && button.attrs.hasOwnProperty(key)){\r\n                            button.element.setAttribute(key, button.attrs[key]);\r\n                        }\r\n                    }\r\n                    if(button.scope === 'auxiliary'){\r\n                        elements.buttons.auxiliary.appendChild(button.element);\r\n                    }else{\r\n                        elements.buttons.primary.appendChild(button.element);\r\n                    }\r\n                }\r\n                //make elements pubic\r\n                instance.elements = elements;\r\n                \r\n                //save event handlers delegates\r\n                internal.resetHandler = delegate(instance, onReset);\r\n                internal.beginMoveHandler = delegate(instance, beginMove);\r\n                internal.beginResizeHandler = delegate(instance, beginResize);\r\n                internal.bringToFrontHandler = delegate(instance, bringToFront);\r\n                internal.modalClickHandler = delegate(instance, modalClickHandler);\r\n                internal.buttonsClickHandler = delegate(instance, buttonsClickHandler);\r\n                internal.commandsClickHandler = delegate(instance, commandsClickHandler);\r\n                internal.transitionInHandler = delegate(instance, handleTransitionInEvent);\r\n                internal.transitionOutHandler = delegate(instance, handleTransitionOutEvent);\r\n\r\n                //settings\r\n                for(var opKey in internal.options){\r\n                    if(setup.options[opKey] !== undefined){\r\n                        // if found in user options\r\n                        instance.set(opKey, setup.options[opKey]);\r\n                    }else if(alertify.defaults.hasOwnProperty(opKey)) {\r\n                        // else if found in defaults options\r\n                        instance.set(opKey, alertify.defaults[opKey]);\r\n                    }else if(opKey === 'title' ) {\r\n                        // else if title key, use alertify.defaults.glossary\r\n                        instance.set(opKey, alertify.defaults.glossary[opKey]);\r\n                    }\r\n                }\r\n\r\n                // allow dom customization\r\n                if(typeof instance.build === 'function'){\r\n                    instance.build();\r\n                }\r\n\r\n                //invoke postinit global hook\r\n                alertify.defaults.hooks.postinit(instance);\r\n            }\r\n\r\n            //add to the end of the DOM tree.\r\n            document.body.appendChild(instance.elements.root);\r\n        }\r\n\r\n        /**\r\n         * Helper: maintains scroll position\r\n         *\r\n         */\r\n        var scrollX, scrollY;\r\n        function saveScrollPosition(){\r\n            scrollX = getScrollLeft();\r\n            scrollY = getScrollTop();\r\n        }\r\n        function restoreScrollPosition(){\r\n            window.scrollTo(scrollX, scrollY);\r\n        }\r\n\r\n        /**\r\n         * Helper: adds/removes no-overflow class from body\r\n         *\r\n         */\r\n        function ensureNoOverflow(){\r\n            var requiresNoOverflow = 0;\r\n            for(var x=0;x<openDialogs.length;x+=1){\r\n                var instance = openDialogs[x];\r\n                if(instance.isModal() || instance.isMaximized()){\r\n                    requiresNoOverflow+=1;\r\n                }\r\n            }\r\n            if(requiresNoOverflow === 0 && document.body.className.indexOf(classes.noOverflow) >= 0){\r\n                //last open modal or last maximized one\r\n                removeClass(document.body, classes.noOverflow);\r\n                preventBodyShift(false);\r\n            }else if(requiresNoOverflow > 0 && document.body.className.indexOf(classes.noOverflow) < 0){\r\n                //first open modal or first maximized one\r\n                preventBodyShift(true);\r\n                addClass(document.body, classes.noOverflow);\r\n            }\r\n        }\r\n        var top = '', topScroll = 0;\r\n        /**\r\n         * Helper: prevents body shift.\r\n         *\r\n         */\r\n        function preventBodyShift(add){\r\n            if(alertify.defaults.preventBodyShift){\r\n                if(add && document.documentElement.scrollHeight > document.documentElement.clientHeight ){//&& openDialogs[openDialogs.length-1].elements.dialog.clientHeight <= document.documentElement.clientHeight){\r\n                    topScroll = scrollY;\r\n                    top = window.getComputedStyle(document.body).top;\r\n                    addClass(document.body, classes.fixed);\r\n                    document.body.style.top = -scrollY + 'px';\r\n                } else if(!add) {\r\n                    scrollY = topScroll;\r\n                    document.body.style.top = top;\r\n                    removeClass(document.body, classes.fixed);\r\n                    restoreScrollPosition();\r\n                }\r\n            }\r\n        }\r\n\t\t\r\n        /**\r\n         * Sets the name of the transition used to show/hide the dialog\r\n         * \r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         */\r\n        function updateTransition(instance, value, oldValue){\r\n            if(typeof oldValue === 'string'){\r\n                removeClass(instance.elements.root,classes.prefix +  oldValue);\r\n            }\r\n            addClass(instance.elements.root, classes.prefix + value);\r\n            reflow = instance.elements.root.offsetWidth;\r\n        }\r\n\r\n        /**\r\n         * Toggles the dialog no transition \r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updateTransitionOff(instance){\r\n            if (instance.get('transitionOff')) {\r\n                // add class\r\n                addClass(instance.elements.root, classes.noTransition);\r\n            } else {\r\n                // remove class\r\n                removeClass(instance.elements.root, classes.noTransition);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Toggles the dialog display mode\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updateDisplayMode(instance){\r\n            if(instance.get('modal')){\r\n\r\n                //make modal\r\n                removeClass(instance.elements.root, classes.modeless);\r\n\r\n                //only if open\r\n                if(instance.isOpen()){\r\n                    unbindModelessEvents(instance);\r\n\r\n                    //in case a pinned modless dialog was made modal while open.\r\n                    updateAbsPositionFix(instance);\r\n\r\n                    ensureNoOverflow();\r\n                }\r\n            }else{\r\n                //make modelss\r\n                addClass(instance.elements.root, classes.modeless);\r\n\r\n                //only if open\r\n                if(instance.isOpen()){\r\n                    bindModelessEvents(instance);\r\n\r\n                    //in case pin/unpin was called while a modal is open\r\n                    updateAbsPositionFix(instance);\r\n\r\n                    ensureNoOverflow();\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Toggles the dialog basic view mode \r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updateBasicMode(instance){\r\n            if (instance.get('basic')) {\r\n                // add class\r\n                addClass(instance.elements.root, classes.basic);\r\n            } else {\r\n                // remove class\r\n                removeClass(instance.elements.root, classes.basic);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Toggles the dialog frameless view mode \r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updateFramelessMode(instance){\r\n            if (instance.get('frameless')) {\r\n                // add class\r\n                addClass(instance.elements.root, classes.frameless);\r\n            } else {\r\n                // remove class\r\n                removeClass(instance.elements.root, classes.frameless);\r\n            }\r\n        }\r\n\t\t\r\n        /**\r\n         * Helper: Brings the modeless dialog to front, attached to modeless dialogs.\r\n         *\r\n         * @param {Event} event Focus event\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function bringToFront(event, instance){\r\n            \r\n            // Do not bring to front if preceeded by an open modal\r\n            var index = openDialogs.indexOf(instance);\r\n            for(var x=index+1;x<openDialogs.length;x+=1){\r\n                if(openDialogs[x].isModal()){\r\n                    return;\r\n                }\r\n            }\r\n\t\t\t\r\n            // Bring to front by making it the last child.\r\n            if(document.body.lastChild !== instance.elements.root){\r\n                document.body.appendChild(instance.elements.root);\r\n                //also make sure its at the end of the list\r\n                openDialogs.splice(openDialogs.indexOf(instance),1);\r\n                openDialogs.push(instance);\r\n                setFocus(instance);\r\n            }\r\n\t\t\t\r\n            return false;\r\n        }\r\n\t\t\r\n        /**\r\n         * Helper: reflects dialogs options updates\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {String} option The updated option name.\r\n         *\r\n         * @return\t{undefined}\t\r\n         */\r\n        function optionUpdated(instance, option, oldValue, newValue){\r\n            switch(option){\r\n            case 'title':\r\n                instance.setHeader(newValue);\r\n                break;\r\n            case 'modal':\r\n                updateDisplayMode(instance);\r\n                break;\r\n            case 'basic':\r\n                updateBasicMode(instance);\r\n                break;\r\n            case 'frameless':\r\n                updateFramelessMode(instance);\r\n                break;\r\n            case 'pinned':\r\n                updatePinned(instance);\r\n                break;\r\n            case 'closable':\r\n                updateClosable(instance);\r\n                break;\r\n            case 'maximizable':\r\n                updateMaximizable(instance);\r\n                break;\r\n            case 'pinnable':\r\n                updatePinnable(instance);\r\n                break;\r\n            case 'movable':\r\n                updateMovable(instance);\r\n                break;\r\n            case 'resizable':\r\n                updateResizable(instance);\r\n                break;\r\n            case 'padding':\r\n                if(newValue){\r\n                    removeClass(instance.elements.root, classes.noPadding);\r\n                }else if(instance.elements.root.className.indexOf(classes.noPadding) < 0){\r\n                    addClass(instance.elements.root, classes.noPadding);\r\n                }\r\n                break;\r\n            case 'overflow':\r\n                if(newValue){\r\n                    removeClass(instance.elements.root, classes.noOverflow);\r\n                }else if(instance.elements.root.className.indexOf(classes.noOverflow) < 0){\r\n                    addClass(instance.elements.root, classes.noOverflow);\r\n                }\r\n                break;\r\n            case 'transition':\r\n                updateTransition(instance,newValue, oldValue);\r\n                break;\r\n            case 'transitionOff':\r\n                updateTransitionOff(instance);\r\n                break;\r\n            }\r\n\r\n            // internal on option updated event\r\n            if(typeof instance.hooks.onupdate === 'function'){\r\n                instance.hooks.onupdate.call(instance, option, oldValue, newValue);\r\n            }\r\n        }\r\n\t\t\r\n        /**\r\n         * Helper: reflects dialogs options updates\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {Object} obj The object to set/get a value on/from.\r\n         * @param {Function} callback The callback function to call if the key was found.\r\n         * @param {String|Object} key A string specifying a propery name or a collection of key value pairs.\r\n         * @param {Object} value Optional, the value associated with the key (in case it was a string).\r\n         * @param {String} option The updated option name.\r\n         *\r\n         * @return\t{Object} result object \r\n         *\tThe result objects has an 'op' property, indicating of this is a SET or GET operation.\r\n         *\t\tGET: \r\n         *\t\t- found: a flag indicating if the key was found or not.\r\n         *\t\t- value: the property value.\r\n         *\t\tSET:\r\n         *\t\t- items: a list of key value pairs of the properties being set.\r\n         *\t\t\t\teach contains:\r\n         *\t\t\t\t\t- found: a flag indicating if the key was found or not.\r\n         *\t\t\t\t\t- key: the property key.\r\n         *\t\t\t\t\t- value: the property value.\r\n         */\r\n        function update(instance, obj, callback, key, value){\r\n            var result = {op:undefined, items: [] };\r\n            if(typeof value === 'undefined' && typeof key === 'string') {\r\n                //get\r\n                result.op = 'get';\r\n                if(obj.hasOwnProperty(key)){\r\n                    result.found = true;\r\n                    result.value = obj[key];\r\n                }else{\r\n                    result.found = false;\r\n                    result.value = undefined;\r\n                }\r\n            }\r\n            else\r\n            {\r\n                var old;\r\n                //set\r\n                result.op = 'set';\r\n                if(typeof key === 'object'){\r\n                    //set multiple\r\n                    var args = key;\r\n                    for (var prop in args) {\r\n                        if (obj.hasOwnProperty(prop)) {\r\n                            if(obj[prop] !== args[prop]){\r\n                                old = obj[prop];\r\n                                obj[prop] = args[prop];\r\n                                callback.call(instance,prop, old, args[prop]);\r\n                            }\r\n                            result.items.push({ 'key': prop, 'value': args[prop], 'found':true});\r\n                        }else{\r\n                            result.items.push({ 'key': prop, 'value': args[prop], 'found':false});\r\n                        }\r\n                    }\r\n                } else if (typeof key === 'string'){\r\n                    //set single\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        if(obj[key] !== value){\r\n                            old  = obj[key];\r\n                            obj[key] = value;\r\n                            callback.call(instance,key, old, value);\r\n                        }\r\n                        result.items.push({'key': key, 'value': value , 'found':true});\r\n\r\n                    }else{\r\n                        result.items.push({'key': key, 'value': value , 'found':false});\r\n                    }\r\n                } else {\r\n                    //invalid params\r\n                    throw new Error('args must be a string or object');\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n\r\n\r\n        /**\r\n         * Triggers a close event.\r\n         *\r\n         * @param {Object} instance\tThe dilog instance.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function triggerClose(instance) {\r\n            var found;\r\n            triggerCallback(instance, function (button) {\r\n                return found = instance.get('invokeOnCloseOff') !== true && (button.invokeOnClose === true);\r\n            });\r\n            //none of the buttons registered as onclose callback\r\n            //close the dialog\r\n            if (!found && instance.isOpen()) {\r\n                instance.close();\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Dialogs commands event handler, attached to the dialog commands element.\r\n         *\r\n         * @param {Event} event\tDOM event object.\r\n         * @param {Object} instance\tThe dilog instance.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function commandsClickHandler(event, instance) {\r\n            var target = event.srcElement || event.target;\r\n            switch (target) {\r\n            case instance.elements.commands.pin:\r\n                if (!instance.isPinned()) {\r\n                    pin(instance);\r\n                } else {\r\n                    unpin(instance);\r\n                }\r\n                break;\r\n            case instance.elements.commands.maximize:\r\n                if (!instance.isMaximized()) {\r\n                    maximize(instance);\r\n                } else {\r\n                    restore(instance);\r\n                }\r\n                break;\r\n            case instance.elements.commands.close:\r\n                triggerClose(instance);\r\n                break;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        /**\r\n         * Helper: pins the modeless dialog.\r\n         *\r\n         * @param {Object} instance\tThe dialog instance.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function pin(instance) {\r\n            //pin the dialog\r\n            instance.set('pinned', true);\r\n        }\r\n\r\n        /**\r\n         * Helper: unpins the modeless dialog.\r\n         *\r\n         * @param {Object} instance\tThe dilog instance.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function unpin(instance) {\r\n            //unpin the dialog \r\n            instance.set('pinned', false);\r\n        }\r\n\r\n\r\n        /**\r\n         * Helper: enlarges the dialog to fill the entire screen.\r\n         *\r\n         * @param {Object} instance\tThe dilog instance.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function maximize(instance) {\r\n            // allow custom `onmaximize` method\r\n            dispatchEvent('onmaximize', instance);\r\n            //maximize the dialog \r\n            addClass(instance.elements.root, classes.maximized);\r\n            if (instance.isOpen()) {\r\n                ensureNoOverflow();\r\n            }\r\n            // allow custom `onmaximized` method\r\n            dispatchEvent('onmaximized', instance);\r\n        }\r\n\r\n        /**\r\n         * Helper: returns the dialog to its former size.\r\n         *\r\n         * @param {Object} instance\tThe dilog instance.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function restore(instance) {\r\n            // allow custom `onrestore` method\r\n            dispatchEvent('onrestore', instance);\r\n            //maximize the dialog \r\n            removeClass(instance.elements.root, classes.maximized);\r\n            if (instance.isOpen()) {\r\n                ensureNoOverflow();\r\n            }\r\n            // allow custom `onrestored` method\r\n            dispatchEvent('onrestored', instance);\r\n        }\r\n\r\n        /**\r\n         * Show or hide the maximize box.\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {Boolean} on True to add the behavior, removes it otherwise.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updatePinnable(instance) {\r\n            if (instance.get('pinnable')) {\r\n                // add class\r\n                addClass(instance.elements.root, classes.pinnable);\r\n            } else {\r\n                // remove class\r\n                removeClass(instance.elements.root, classes.pinnable);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Helper: Fixes the absolutly positioned modal div position.\r\n         *\r\n         * @param {Object} instance The dialog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function addAbsPositionFix(instance) {\r\n            var scrollLeft = getScrollLeft();\r\n            instance.elements.modal.style.marginTop = getScrollTop() + 'px';\r\n            instance.elements.modal.style.marginLeft = scrollLeft + 'px';\r\n            instance.elements.modal.style.marginRight = (-scrollLeft) + 'px';\r\n        }\r\n\r\n        /**\r\n         * Helper: Removes the absolutly positioned modal div position fix.\r\n         *\r\n         * @param {Object} instance The dialog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function removeAbsPositionFix(instance) {\r\n            var marginTop = parseInt(instance.elements.modal.style.marginTop, 10);\r\n            var marginLeft = parseInt(instance.elements.modal.style.marginLeft, 10);\r\n            instance.elements.modal.style.marginTop = '';\r\n            instance.elements.modal.style.marginLeft = '';\r\n            instance.elements.modal.style.marginRight = '';\r\n\r\n            if (instance.isOpen()) {\r\n                var top = 0,\r\n                    left = 0\r\n                ;\r\n                if (instance.elements.dialog.style.top !== '') {\r\n                    top = parseInt(instance.elements.dialog.style.top, 10);\r\n                }\r\n                instance.elements.dialog.style.top = (top + (marginTop - getScrollTop())) + 'px';\r\n\r\n                if (instance.elements.dialog.style.left !== '') {\r\n                    left = parseInt(instance.elements.dialog.style.left, 10);\r\n                }\r\n                instance.elements.dialog.style.left = (left + (marginLeft - getScrollLeft())) + 'px';\r\n            }\r\n        }\r\n        /**\r\n         * Helper: Adds/Removes the absolutly positioned modal div position fix based on its pinned setting.\r\n         *\r\n         * @param {Object} instance The dialog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updateAbsPositionFix(instance) {\r\n            // if modeless and unpinned add fix\r\n            if (!instance.get('modal') && !instance.get('pinned')) {\r\n                addAbsPositionFix(instance);\r\n            } else {\r\n                removeAbsPositionFix(instance);\r\n            }\r\n        }\r\n        /**\r\n         * Toggles the dialog position lock | modeless only.\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {Boolean} on True to make it modal, false otherwise.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updatePinned(instance) {\r\n            if (instance.get('pinned')) {\r\n                removeClass(instance.elements.root, classes.unpinned);\r\n                if (instance.isOpen()) {\r\n                    removeAbsPositionFix(instance);\r\n                }\r\n            } else {\r\n                addClass(instance.elements.root, classes.unpinned);\r\n                if (instance.isOpen() && !instance.isModal()) {\r\n                    addAbsPositionFix(instance);\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Show or hide the maximize box.\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {Boolean} on True to add the behavior, removes it otherwise.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updateMaximizable(instance) {\r\n            if (instance.get('maximizable')) {\r\n                // add class\r\n                addClass(instance.elements.root, classes.maximizable);\r\n            } else {\r\n                // remove class\r\n                removeClass(instance.elements.root, classes.maximizable);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Show or hide the close box.\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {Boolean} on True to add the behavior, removes it otherwise.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updateClosable(instance) {\r\n            if (instance.get('closable')) {\r\n                // add class\r\n                addClass(instance.elements.root, classes.closable);\r\n                bindClosableEvents(instance);\r\n            } else {\r\n                // remove class\r\n                removeClass(instance.elements.root, classes.closable);\r\n                unbindClosableEvents(instance);\r\n            }\r\n        }\r\n\r\n        \r\n        var cancelClick = false,// flag to cancel click event if already handled by end resize event (the mousedown, mousemove, mouseup sequence fires a click event.).\r\n            modalClickHandlerTS=0 // stores last click timestamp to prevent executing the handler twice on double click.\r\n            ;\r\n\r\n        /**\r\n         * Helper: closes the modal dialog when clicking the modal\r\n         *\r\n         * @param {Event} event\tDOM event object.\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function modalClickHandler(event, instance) {\r\n            if(event.timeStamp - modalClickHandlerTS > 200 && (modalClickHandlerTS = event.timeStamp) && !cancelClick){\r\n                var target = event.srcElement || event.target;\r\n                if (instance.get('closableByDimmer') === true && target === instance.elements.modal) {\r\n                    triggerClose(instance);\r\n                }\r\n            }\r\n            cancelClick = false;\r\n        }\r\n\r\n        // stores last call timestamp to prevent triggering the callback twice.\r\n        var callbackTS = 0;\r\n        // flag to cancel keyup event if already handled by click event (pressing Enter on a focusted button).\r\n        var cancelKeyup = false;\r\n        /** \r\n         * Helper: triggers a button callback\r\n         *\r\n         * @param {Object}\t\tThe dilog instance.\r\n         * @param {Function}\tCallback to check which button triggered the event.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function triggerCallback(instance, check) {\r\n            if(Date.now() - callbackTS > 200 && (callbackTS = Date.now())){\r\n                for (var idx = 0; idx < instance.__internal.buttons.length; idx += 1) {\r\n                    var button = instance.__internal.buttons[idx];\r\n                    if (!button.element.disabled && check(button)) {\r\n                        var closeEvent = createCloseEvent(idx, button);\r\n                        if (typeof instance.callback === 'function') {\r\n                            instance.callback.apply(instance, [closeEvent]);\r\n                        }\r\n                        //close the dialog only if not canceled.\r\n                        if (closeEvent.cancel === false) {\r\n                            instance.close();\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Clicks event handler, attached to the dialog footer.\r\n         *\r\n         * @param {Event}\t\tDOM event object.\r\n         * @param {Object}\t\tThe dilog instance.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function buttonsClickHandler(event, instance) {\r\n            var target = event.srcElement || event.target;\r\n            triggerCallback(instance, function (button) {\r\n                // if this button caused the click, cancel keyup event\r\n                return button.element === target && (cancelKeyup = true);\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Keyup event handler, attached to the document.body\r\n         *\r\n         * @param {Event}\t\tDOM event object.\r\n         * @param {Object}\t\tThe dilog instance.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function keyupHandler(event) {\r\n            //hitting enter while button has focus will trigger keyup too.\r\n            //ignore if handled by clickHandler\r\n            if (cancelKeyup) {\r\n                cancelKeyup = false;\r\n                return;\r\n            }\r\n            var instance = openDialogs[openDialogs.length - 1];\r\n            var keyCode = event.keyCode;\r\n            if (instance.__internal.buttons.length === 0 && keyCode === keys.ESC && instance.get('closable') === true) {\r\n                triggerClose(instance);\r\n                return false;\r\n            }else if (usedKeys.indexOf(keyCode) > -1) {\r\n                triggerCallback(instance, function (button) {\r\n                    return button.key === keyCode;\r\n                });\r\n                return false;\r\n            }\r\n        }\r\n        /**\r\n        * Keydown event handler, attached to the document.body\r\n        *\r\n        * @param {Event}\t\tDOM event object.\r\n        * @param {Object}\t\tThe dilog instance.\r\n        * \r\n        * @return {undefined}\r\n        */\r\n        function keydownHandler(event) {\r\n            var instance = openDialogs[openDialogs.length - 1];\r\n            var keyCode = event.keyCode;\r\n            if (keyCode === keys.LEFT || keyCode === keys.RIGHT) {\r\n                var buttons = instance.__internal.buttons;\r\n                for (var x = 0; x < buttons.length; x += 1) {\r\n                    if (document.activeElement === buttons[x].element) {\r\n                        switch (keyCode) {\r\n                        case keys.LEFT:\r\n                            buttons[(x || buttons.length) - 1].element.focus();\r\n                            return;\r\n                        case keys.RIGHT:\r\n                            buttons[(x + 1) % buttons.length].element.focus();\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n            }else if (keyCode < keys.F12 + 1 && keyCode > keys.F1 - 1 && usedKeys.indexOf(keyCode) > -1) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                triggerCallback(instance, function (button) {\r\n                    return button.key === keyCode;\r\n                });\r\n                return false;\r\n            }\r\n        }\r\n\r\n\r\n        /**\r\n         * Sets focus to proper dialog element\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {Node} [resetTarget=undefined] DOM element to reset focus to.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function setFocus(instance, resetTarget) {\r\n            // reset target has already been determined.\r\n            if (resetTarget) {\r\n                resetTarget.focus();\r\n            } else {\r\n                // current instance focus settings\r\n                var focus = instance.__internal.focus;\r\n                // the focus element.\r\n                var element = focus.element;\r\n\r\n                switch (typeof focus.element) {\r\n                // a number means a button index\r\n                case 'number':\r\n                    if (instance.__internal.buttons.length > focus.element) {\r\n                        //in basic view, skip focusing the buttons.\r\n                        if (instance.get('basic') === true) {\r\n                            element = instance.elements.reset[0];\r\n                        } else {\r\n                            element = instance.__internal.buttons[focus.element].element;\r\n                        }\r\n                    }\r\n                    break;\r\n                // a string means querySelector to select from dialog body contents.\r\n                case 'string':\r\n                    element = instance.elements.body.querySelector(focus.element);\r\n                    break;\r\n                // a function should return the focus element.\r\n                case 'function':\r\n                    element = focus.element.call(instance);\r\n                    break;\r\n                }\r\n\r\n                // if no focus element, default to first reset element.\r\n                if (instance.get('defaultFocusOff') === true || ((typeof element === 'undefined' || element === null) && instance.__internal.buttons.length === 0)) {\r\n                    element = instance.elements.reset[0];\r\n                }\r\n                // focus\r\n                if (element && element.focus) {\r\n                    element.focus();\r\n                    // if selectable\r\n                    if (focus.select && element.select) {\r\n                        element.select();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Focus event handler, attached to document.body and dialogs own reset links.\r\n         * handles the focus for modal dialogs only.\r\n         *\r\n         * @param {Event} event DOM focus event object.\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function onReset(event, instance) {\r\n\r\n            // should work on last modal if triggered from document.body \r\n            if (!instance) {\r\n                for (var x = openDialogs.length - 1; x > -1; x -= 1) {\r\n                    if (openDialogs[x].isModal()) {\r\n                        instance = openDialogs[x];\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if(instance) {\r\n                // if modal\r\n                if (instance.isModal()) {\r\n                    // determine reset target to enable forward/backward tab cycle.\r\n                    var firstReset = instance.elements.reset[0],\r\n                        lastReset = instance.elements.reset[1],\r\n                        lastFocusedElement = event.relatedTarget,\r\n                        within = instance.elements.root.contains(lastFocusedElement),\r\n                        target = event.srcElement || event.target,\r\n                        resetTarget;\r\n\r\n                    //if the previous focused element element was outside the modal do nthing\r\n                    if(  /*first show */\r\n                        (target === firstReset && !within) ||\r\n                         /*focus cycle */\r\n                        (target === lastReset && lastFocusedElement === firstReset)){\r\n                        return;\r\n                    }else if(target === lastReset || target === document.body){\r\n                        resetTarget = firstReset;\r\n                    }else if(target === firstReset && lastFocusedElement === lastReset){\r\n                        resetTarget = findTabbable(instance);\r\n                    }else if(target === firstReset && within){\r\n                        resetTarget = findTabbable(instance, true);\r\n                    }\r\n                    // focus\r\n                    setFocus(instance, resetTarget);\r\n                }\r\n            }\r\n        }\r\n        function findTabbable(instance, last){\r\n            var tabbables = [].slice.call(instance.elements.dialog.querySelectorAll(defaults.tabbable));\r\n            if(last){\r\n                tabbables.reverse();\r\n            }\r\n            for(var x=0;x<tabbables.length;x+=1){\r\n                var tabbable = tabbables[x];\r\n                //check if visible\r\n                if(!!(tabbable.offsetParent || tabbable.offsetWidth || tabbable.offsetHeight || tabbable.getClientRects().length)){\r\n                    return tabbable;\r\n                }\r\n            }\r\n        }\r\n        function recycleTab(event) {\r\n            var instance = openDialogs[openDialogs.length - 1];\r\n            if (instance && event.shiftKey && event.keyCode === keys.TAB) {\r\n                instance.elements.reset[1].focus();\r\n            }\r\n        }\r\n        /**\r\n         * Transition in transitionend event handler. \r\n         *\r\n         * @param {Event}\t\tTransitionEnd event object.\r\n         * @param {Object}\t\tThe dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function handleTransitionInEvent(event, instance) {\r\n            // clear the timer\r\n            clearTimeout(instance.__internal.timerIn);\r\n\r\n            // once transition is complete, set focus\r\n            setFocus(instance);\r\n\r\n            // allow handling key up after transition ended.\r\n            cancelKeyup = false;\r\n\r\n            // allow custom `onfocus` method\r\n            dispatchEvent('onfocus', instance);\r\n\r\n            // unbind the event\r\n            off(instance.elements.dialog, transition.type, instance.__internal.transitionInHandler);\r\n\r\n            removeClass(instance.elements.root, classes.animationIn);\r\n        }\r\n\r\n        /**\r\n         * Transition out transitionend event handler. \r\n         *\r\n         * @param {Event}\t\tTransitionEnd event object.\r\n         * @param {Object}\t\tThe dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function handleTransitionOutEvent(event, instance) {\r\n            // clear the timer\r\n            clearTimeout(instance.__internal.timerOut);\r\n            // unbind the event\r\n            off(instance.elements.dialog, transition.type, instance.__internal.transitionOutHandler);\r\n\r\n            // reset move updates\r\n            resetMove(instance);\r\n            // reset resize updates\r\n            resetResize(instance);\r\n\r\n            // restore if maximized\r\n            if (instance.isMaximized() && !instance.get('startMaximized')) {\r\n                restore(instance);\r\n            }\r\n\r\n            //destory the instance\r\n            if (typeof instance.__internal.destroy === 'function') {\r\n                instance.__internal.destroy.apply(instance);\r\n            }\r\n        }\r\n        /* Controls moving a dialog around */\r\n        //holde the current moving instance\r\n        var movable = null,\r\n            //holds the current X offset when move starts\r\n            offsetX = 0,\r\n            //holds the current Y offset when move starts\r\n            offsetY = 0,\r\n            xProp = 'pageX',\r\n            yProp = 'pageY',\r\n            bounds = null,\r\n            refreshTop = false,\r\n            moveDelegate = null\r\n        ;\r\n\r\n        /**\r\n         * Helper: sets the element top/left coordinates\r\n         *\r\n         * @param {Event} event\tDOM event object.\r\n         * @param {Node} element The element being moved.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function moveElement(event, element) {\r\n            var left = (event[xProp] - offsetX),\r\n                top  = (event[yProp] - offsetY);\r\n\r\n            if(refreshTop){\r\n                top -= document.body.scrollTop;\r\n            }\r\n           \r\n            element.style.left = left + 'px';\r\n            element.style.top = top + 'px';\r\n           \r\n        }\r\n        /**\r\n         * Helper: sets the element top/left coordinates within screen bounds\r\n         *\r\n         * @param {Event} event\tDOM event object.\r\n         * @param {Node} element The element being moved.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function moveElementBounded(event, element) {\r\n            var left = (event[xProp] - offsetX),\r\n                top  = (event[yProp] - offsetY);\r\n\r\n            if(refreshTop){\r\n                top -= document.body.scrollTop;\r\n            }\r\n            \r\n            element.style.left = Math.min(bounds.maxLeft, Math.max(bounds.minLeft, left)) + 'px';\r\n            if(refreshTop){\r\n                element.style.top = Math.min(bounds.maxTop, Math.max(bounds.minTop, top)) + 'px';\r\n            }else{\r\n                element.style.top = Math.max(bounds.minTop, top) + 'px';\r\n            }\r\n        }\r\n            \r\n\r\n        /**\r\n         * Triggers the start of a move event, attached to the header element mouse down event.\r\n         * Adds no-selection class to the body, disabling selection while moving.\r\n         *\r\n         * @param {Event} event\tDOM event object.\r\n         * @param {Object} instance The dilog instance.\r\n         * \r\n         * @return {Boolean} false\r\n         */\r\n        function beginMove(event, instance) {\r\n            if (resizable === null && !instance.isMaximized() && instance.get('movable')) {\r\n                var eventSrc, left=0, top=0;\r\n                if (event.type === 'touchstart') {\r\n                    event.preventDefault();\r\n                    eventSrc = event.targetTouches[0];\r\n                    xProp = 'clientX';\r\n                    yProp = 'clientY';\r\n                } else if (event.button === 0) {\r\n                    eventSrc = event;\r\n                }\r\n\r\n                if (eventSrc) {\r\n\r\n                    var element = instance.elements.dialog;\r\n                    addClass(element, classes.capture);\r\n\r\n                    if (element.style.left) {\r\n                        left = parseInt(element.style.left, 10);\r\n                    }\r\n\r\n                    if (element.style.top) {\r\n                        top = parseInt(element.style.top, 10);\r\n                    }\r\n                    \r\n                    offsetX = eventSrc[xProp] - left;\r\n                    offsetY = eventSrc[yProp] - top;\r\n\r\n                    if(instance.isModal()){\r\n                        offsetY += instance.elements.modal.scrollTop;\r\n                    }else if(instance.isPinned()){\r\n                        offsetY -= document.body.scrollTop;\r\n                    }\r\n                    \r\n                    if(instance.get('moveBounded')){\r\n                        var current = element,\r\n                            offsetLeft = -left,\r\n                            offsetTop = -top;\r\n                        \r\n                        //calc offset\r\n                        do {\r\n                            offsetLeft += current.offsetLeft;\r\n                            offsetTop += current.offsetTop;\r\n                        } while (current = current.offsetParent);\r\n                        \r\n                        bounds = {\r\n                            maxLeft : offsetLeft,\r\n                            minLeft : -offsetLeft,\r\n                            maxTop  : document.documentElement.clientHeight - element.clientHeight - offsetTop,\r\n                            minTop  : -offsetTop\r\n                        };\r\n                        moveDelegate = moveElementBounded;\r\n                    }else{\r\n                        bounds = null;\r\n                        moveDelegate = moveElement;\r\n                    }\r\n                    \r\n                    // allow custom `onmove` method\r\n                    dispatchEvent('onmove', instance);\r\n\r\n                    refreshTop = !instance.isModal() && instance.isPinned();\r\n                    movable = instance;\r\n                    moveDelegate(eventSrc, element);\r\n                    addClass(document.body, classes.noSelection);\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * The actual move handler,  attached to document.body mousemove event.\r\n         *\r\n         * @param {Event} event\tDOM event object.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function move(event) {\r\n            if (movable) {\r\n                var eventSrc;\r\n                if (event.type === 'touchmove') {\r\n                    event.preventDefault();\r\n                    eventSrc = event.targetTouches[0];\r\n                } else if (event.button === 0) {\r\n                    eventSrc = event;\r\n                }\r\n                if (eventSrc) {\r\n                    moveDelegate(eventSrc, movable.elements.dialog);\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Triggers the end of a move event,  attached to document.body mouseup event.\r\n         * Removes no-selection class from document.body, allowing selection.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function endMove() {\r\n            if (movable) {\r\n                var instance = movable;\r\n                movable = bounds = null;\r\n                removeClass(document.body, classes.noSelection);\r\n                removeClass(instance.elements.dialog, classes.capture);\r\n                // allow custom `onmoved` method\r\n                dispatchEvent('onmoved', instance);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Resets any changes made by moving the element to its original state,\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function resetMove(instance) {\r\n            movable = null;\r\n            var element = instance.elements.dialog;\r\n            element.style.left = element.style.top = '';\r\n        }\r\n\r\n        /**\r\n         * Updates the dialog move behavior.\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {Boolean} on True to add the behavior, removes it otherwise.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updateMovable(instance) {\r\n            if (instance.get('movable')) {\r\n                // add class\r\n                addClass(instance.elements.root, classes.movable);\r\n                if (instance.isOpen()) {\r\n                    bindMovableEvents(instance);\r\n                }\r\n            } else {\r\n\r\n                //reset\r\n                resetMove(instance);\r\n                // remove class\r\n                removeClass(instance.elements.root, classes.movable);\r\n                if (instance.isOpen()) {\r\n                    unbindMovableEvents(instance);\r\n                }\r\n            }\r\n        }\r\n\r\n        /* Controls moving a dialog around */\r\n        //holde the current instance being resized\t\t\r\n        var resizable = null,\r\n            //holds the staring left offset when resize starts.\r\n            startingLeft = Number.Nan,\r\n            //holds the staring width when resize starts.\r\n            startingWidth = 0,\r\n            //holds the initial width when resized for the first time.\r\n            minWidth = 0,\r\n            //holds the offset of the resize handle.\r\n            handleOffset = 0\r\n        ;\r\n\r\n        /**\r\n         * Helper: sets the element width/height and updates left coordinate if neccessary.\r\n         *\r\n         * @param {Event} event\tDOM mousemove event object.\r\n         * @param {Node} element The element being moved.\r\n         * @param {Boolean} pinned A flag indicating if the element being resized is pinned to the screen.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function resizeElement(event, element, pageRelative) {\r\n\r\n            //calculate offsets from 0,0\r\n            var current = element;\r\n            var offsetLeft = 0;\r\n            var offsetTop = 0;\r\n            do {\r\n                offsetLeft += current.offsetLeft;\r\n                offsetTop += current.offsetTop;\r\n            } while (current = current.offsetParent);\r\n\r\n            // determine X,Y coordinates.\r\n            var X, Y;\r\n            if (pageRelative === true) {\r\n                X = event.pageX;\r\n                Y = event.pageY;\r\n            } else {\r\n                X = event.clientX;\r\n                Y = event.clientY;\r\n            }\r\n            // rtl handling\r\n            var isRTL = isRightToLeft();\r\n            if (isRTL) {\r\n                // reverse X \r\n                X = document.body.offsetWidth - X;\r\n                // if has a starting left, calculate offsetRight\r\n                if (!isNaN(startingLeft)) {\r\n                    offsetLeft = document.body.offsetWidth - offsetLeft - element.offsetWidth;\r\n                }\r\n            }\r\n\r\n            // set width/height\r\n            element.style.height = (Y - offsetTop + handleOffset) + 'px';\r\n            element.style.width = (X - offsetLeft + handleOffset) + 'px';\r\n\r\n            // if the element being resized has a starting left, maintain it.\r\n            // the dialog is centered, divide by half the offset to maintain the margins.\r\n            if (!isNaN(startingLeft)) {\r\n                var diff = Math.abs(element.offsetWidth - startingWidth) * 0.5;\r\n                if (isRTL) {\r\n                    //negate the diff, why?\r\n                    //when growing it should decrease left\r\n                    //when shrinking it should increase left\r\n                    diff *= -1;\r\n                }\r\n                if (element.offsetWidth > startingWidth) {\r\n                    //growing\r\n                    element.style.left = (startingLeft + diff) + 'px';\r\n                } else if (element.offsetWidth >= minWidth) {\r\n                    //shrinking\r\n                    element.style.left = (startingLeft - diff) + 'px';\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Triggers the start of a resize event, attached to the resize handle element mouse down event.\r\n         * Adds no-selection class to the body, disabling selection while moving.\r\n         *\r\n         * @param {Event} event\tDOM event object.\r\n         * @param {Object} instance The dilog instance.\r\n         * \r\n         * @return {Boolean} false\r\n         */\r\n        function beginResize(event, instance) {\r\n            if (!instance.isMaximized()) {\r\n                var eventSrc;\r\n                if (event.type === 'touchstart') {\r\n                    event.preventDefault();\r\n                    eventSrc = event.targetTouches[0];\r\n                } else if (event.button === 0) {\r\n                    eventSrc = event;\r\n                }\r\n                if (eventSrc) {\r\n                    // allow custom `onresize` method\r\n                    dispatchEvent('onresize', instance);\r\n                    \r\n                    resizable = instance;\r\n                    handleOffset = instance.elements.resizeHandle.offsetHeight / 2;\r\n                    var element = instance.elements.dialog;\r\n                    addClass(element, classes.capture);\r\n                    startingLeft = parseInt(element.style.left, 10);\r\n                    element.style.height = element.offsetHeight + 'px';\r\n                    element.style.minHeight = instance.elements.header.offsetHeight + instance.elements.footer.offsetHeight + 'px';\r\n                    element.style.width = (startingWidth = element.offsetWidth) + 'px';\r\n\r\n                    if (element.style.maxWidth !== 'none') {\r\n                        element.style.minWidth = (minWidth = element.offsetWidth) + 'px';\r\n                    }\r\n                    element.style.maxWidth = 'none';\r\n                    addClass(document.body, classes.noSelection);\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * The actual resize handler,  attached to document.body mousemove event.\r\n         *\r\n         * @param {Event} event\tDOM event object.\r\n         * \r\n         * @return {undefined}\r\n         */\r\n        function resize(event) {\r\n            if (resizable) {\r\n                var eventSrc;\r\n                if (event.type === 'touchmove') {\r\n                    event.preventDefault();\r\n                    eventSrc = event.targetTouches[0];\r\n                } else if (event.button === 0) {\r\n                    eventSrc = event;\r\n                }\r\n                if (eventSrc) {\r\n                    resizeElement(eventSrc, resizable.elements.dialog, !resizable.get('modal') && !resizable.get('pinned'));\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Triggers the end of a resize event,  attached to document.body mouseup event.\r\n         * Removes no-selection class from document.body, allowing selection.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function endResize() {\r\n            if (resizable) {\r\n                var instance = resizable;\r\n                resizable = null;\r\n                removeClass(document.body, classes.noSelection);\r\n                removeClass(instance.elements.dialog, classes.capture);\r\n                cancelClick = true;\r\n                // allow custom `onresized` method\r\n                dispatchEvent('onresized', instance);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Resets any changes made by resizing the element to its original state.\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function resetResize(instance) {\r\n            resizable = null;\r\n            var element = instance.elements.dialog;\r\n            if (element.style.maxWidth === 'none') {\r\n                //clear inline styles.\r\n                element.style.maxWidth = element.style.minWidth = element.style.width = element.style.height = element.style.minHeight = element.style.left = '';\r\n                //reset variables.\r\n                startingLeft = Number.Nan;\r\n                startingWidth = minWidth = handleOffset = 0;\r\n            }\r\n        }\r\n\r\n\r\n        /**\r\n         * Updates the dialog move behavior.\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         * @param {Boolean} on True to add the behavior, removes it otherwise.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function updateResizable(instance) {\r\n            if (instance.get('resizable')) {\r\n                // add class\r\n                addClass(instance.elements.root, classes.resizable);\r\n                if (instance.isOpen()) {\r\n                    bindResizableEvents(instance);\r\n                }\r\n            } else {\r\n                //reset\r\n                resetResize(instance);\r\n                // remove class\r\n                removeClass(instance.elements.root, classes.resizable);\r\n                if (instance.isOpen()) {\r\n                    unbindResizableEvents(instance);\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Reset move/resize on window resize.\r\n         *\r\n         * @param {Event} event\twindow resize event object.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function windowResize(/*event*/) {\r\n            for (var x = 0; x < openDialogs.length; x += 1) {\r\n                var instance = openDialogs[x];\r\n                if (instance.get('autoReset')) {\r\n                    resetMove(instance);\r\n                    resetResize(instance);\r\n                }\r\n            }\r\n        }\r\n        /**\r\n         * Bind dialogs events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function bindEvents(instance) {\r\n            // if first dialog, hook global handlers\r\n            if (openDialogs.length === 1) {\r\n                //global\r\n                on(window, 'resize', windowResize);\r\n                on(document.body, 'keyup', keyupHandler);\r\n                on(document.body, 'keydown', keydownHandler);\r\n                on(document.body, 'focus', onReset);\r\n\r\n                //move\r\n                on(document.documentElement, 'mousemove', move);\r\n                on(document.documentElement, 'touchmove', move, false, false);\r\n                on(document.documentElement, 'mouseup', endMove);\r\n                on(document.documentElement, 'touchend', endMove);\r\n                //resize\r\n                on(document.documentElement, 'mousemove', resize);\r\n                on(document.documentElement, 'touchmove', resize, false, false);\r\n                on(document.documentElement, 'mouseup', endResize);\r\n                on(document.documentElement, 'touchend', endResize);\r\n            }\r\n\r\n            // common events\r\n            on(instance.elements.commands.container, 'click', instance.__internal.commandsClickHandler);\r\n            on(instance.elements.footer, 'click', instance.__internal.buttonsClickHandler);\r\n            on(instance.elements.reset[0], 'focusin', instance.__internal.resetHandler);\r\n            on(instance.elements.reset[0], 'keydown', recycleTab);\r\n            on(instance.elements.reset[1], 'focusin', instance.__internal.resetHandler);\r\n\r\n            //prevent handling key up when dialog is being opened by a key stroke.\r\n            cancelKeyup = true;\r\n            // hook in transition handler\r\n            on(instance.elements.dialog, transition.type, instance.__internal.transitionInHandler);\r\n\r\n            // modelss only events\r\n            if (!instance.get('modal')) {\r\n                bindModelessEvents(instance);\r\n            }\r\n\r\n            // resizable\r\n            if (instance.get('resizable')) {\r\n                bindResizableEvents(instance);\r\n            }\r\n\r\n            // movable\r\n            if (instance.get('movable')) {\r\n                bindMovableEvents(instance);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Unbind dialogs events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function unbindEvents(instance) {\r\n            // if last dialog, remove global handlers\r\n            if (openDialogs.length === 1) {\r\n                //global\r\n                off(window, 'resize', windowResize);\r\n                off(document.body, 'keyup', keyupHandler);\r\n                off(document.body, 'keydown', keydownHandler);\r\n                off(document.body, 'focus', onReset);\r\n                //move\r\n                off(document.documentElement, 'mousemove', move);\r\n                off(document.documentElement, 'mouseup', endMove);\r\n                //resize\r\n                off(document.documentElement, 'mousemove', resize);\r\n                off(document.documentElement, 'mouseup', endResize);\r\n            }\r\n\r\n            // common events\r\n            off(instance.elements.commands.container, 'click', instance.__internal.commandsClickHandler);\r\n            off(instance.elements.footer, 'click', instance.__internal.buttonsClickHandler);\r\n            off(instance.elements.reset[0], 'focusin', instance.__internal.resetHandler);\r\n            off(instance.elements.reset[0], 'keydown', recycleTab);\r\n            off(instance.elements.reset[1], 'focusin', instance.__internal.resetHandler);\r\n\r\n            // hook out transition handler\r\n            on(instance.elements.dialog, transition.type, instance.__internal.transitionOutHandler);\r\n\r\n            // modelss only events\r\n            if (!instance.get('modal')) {\r\n                unbindModelessEvents(instance);\r\n            }\r\n\r\n            // movable\r\n            if (instance.get('movable')) {\r\n                unbindMovableEvents(instance);\r\n            }\r\n\r\n            // resizable\r\n            if (instance.get('resizable')) {\r\n                unbindResizableEvents(instance);\r\n            }\r\n\r\n        }\r\n\r\n        /**\r\n         * Bind modeless specific events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function bindModelessEvents(instance) {\r\n            on(instance.elements.dialog, 'focus', instance.__internal.bringToFrontHandler, true);\r\n        }\r\n\r\n        /**\r\n         * Unbind modeless specific events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function unbindModelessEvents(instance) {\r\n            off(instance.elements.dialog, 'focus', instance.__internal.bringToFrontHandler, true);\r\n        }\r\n\r\n\r\n\r\n        /**\r\n         * Bind movable specific events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function bindMovableEvents(instance) {\r\n            on(instance.elements.header, 'mousedown', instance.__internal.beginMoveHandler);\r\n            on(instance.elements.header, 'touchstart', instance.__internal.beginMoveHandler, false, false);\r\n        }\r\n\r\n        /**\r\n         * Unbind movable specific events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function unbindMovableEvents(instance) {\r\n            off(instance.elements.header, 'mousedown', instance.__internal.beginMoveHandler);\r\n            off(instance.elements.header, 'touchstart', instance.__internal.beginMoveHandler, false, false);\r\n        }\r\n\r\n\r\n\r\n        /**\r\n         * Bind resizable specific events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function bindResizableEvents(instance) {\r\n            on(instance.elements.resizeHandle, 'mousedown', instance.__internal.beginResizeHandler);\r\n            on(instance.elements.resizeHandle, 'touchstart', instance.__internal.beginResizeHandler, false, false);\r\n        }\r\n\r\n        /**\r\n         * Unbind resizable specific events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function unbindResizableEvents(instance) {\r\n            off(instance.elements.resizeHandle, 'mousedown', instance.__internal.beginResizeHandler);\r\n            off(instance.elements.resizeHandle, 'touchstart', instance.__internal.beginResizeHandler, false, false);\r\n        }\r\n\r\n        /**\r\n         * Bind closable events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function bindClosableEvents(instance) {\r\n            on(instance.elements.modal, 'click', instance.__internal.modalClickHandler);\r\n        }\r\n\r\n        /**\r\n         * Unbind closable specific events\r\n         *\r\n         * @param {Object} instance The dilog instance.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        function unbindClosableEvents(instance) {\r\n            off(instance.elements.modal, 'click', instance.__internal.modalClickHandler);\r\n        }\r\n        // dialog API\r\n        return {\r\n            __init:initialize,\r\n            /**\r\n             * Check if dialog is currently open\r\n             *\r\n             * @return {Boolean}\r\n             */\r\n            isOpen: function () {\r\n                return this.__internal.isOpen;\r\n            },\r\n            isModal: function (){\r\n                return this.elements.root.className.indexOf(classes.modeless) < 0;\r\n            },\r\n            isMaximized:function(){\r\n                return this.elements.root.className.indexOf(classes.maximized) > -1;\r\n            },\r\n            isPinned:function(){\r\n                return this.elements.root.className.indexOf(classes.unpinned) < 0;\r\n            },\r\n            maximize:function(){\r\n                if(!this.isMaximized()){\r\n                    maximize(this);\r\n                }\r\n                return this;\r\n            },\r\n            restore:function(){\r\n                if(this.isMaximized()){\r\n                    restore(this);\r\n                }\r\n                return this;\r\n            },\r\n            pin:function(){\r\n                if(!this.isPinned()){\r\n                    pin(this);\r\n                }\r\n                return this;\r\n            },\r\n            unpin:function(){\r\n                if(this.isPinned()){\r\n                    unpin(this);\r\n                }\r\n                return this;\r\n            },\r\n            bringToFront:function(){\r\n                bringToFront(null, this);\r\n                return this;\r\n            },\r\n            /**\r\n             * Move the dialog to a specific x/y coordinates\r\n             *\r\n             * @param {Number} x    The new dialog x coordinate in pixels.\r\n             * @param {Number} y    The new dialog y coordinate in pixels.\r\n             *\r\n             * @return {Object} The dialog instance.\r\n             */\r\n            moveTo:function(x,y){\r\n                if(!isNaN(x) && !isNaN(y)){\r\n                    // allow custom `onmove` method\r\n                    dispatchEvent('onmove', this);\r\n                    \r\n                    var element = this.elements.dialog,\r\n                        current = element,\r\n                        offsetLeft = 0,\r\n                        offsetTop = 0;\r\n                    \r\n                    //subtract existing left,top\r\n                    if (element.style.left) {\r\n                        offsetLeft -= parseInt(element.style.left, 10);\r\n                    }\r\n                    if (element.style.top) {\r\n                        offsetTop -= parseInt(element.style.top, 10);\r\n                    }\r\n                    //calc offset\r\n                    do {\r\n                        offsetLeft += current.offsetLeft;\r\n                        offsetTop += current.offsetTop;\r\n                    } while (current = current.offsetParent);\r\n\r\n                    //calc left, top\r\n                    var left = (x - offsetLeft);\r\n                    var top  = (y - offsetTop);\r\n\r\n                    //// rtl handling\r\n                    if (isRightToLeft()) {\r\n                        left *= -1;\r\n                    }\r\n\r\n                    element.style.left = left + 'px';\r\n                    element.style.top = top + 'px';\r\n                    \r\n                    // allow custom `onmoved` method\r\n                    dispatchEvent('onmoved', this);\r\n                }\r\n                return this;\r\n            },\r\n            /**\r\n             * Resize the dialog to a specific width/height (the dialog must be 'resizable').\r\n             * The dialog can be resized to:\r\n             *  A minimum width equal to the initial display width\r\n             *  A minimum height equal to the sum of header/footer heights.\r\n             *\r\n             *\r\n             * @param {Number or String} width    The new dialog width in pixels or in percent.\r\n             * @param {Number or String} height   The new dialog height in pixels or in percent.\r\n             *\r\n             * @return {Object} The dialog instance.\r\n             */\r\n            resizeTo:function(width,height){\r\n                var w = parseFloat(width),\r\n                    h = parseFloat(height),\r\n                    regex = /(\\d*\\.\\d+|\\d+)%/\r\n                ;\r\n\r\n                if(!isNaN(w) && !isNaN(h) && this.get('resizable') === true){\r\n                    \r\n                    // allow custom `onresize` method\r\n                    dispatchEvent('onresize', this);\r\n                    \r\n                    if(('' + width).match(regex)){\r\n                        w = w / 100 * document.documentElement.clientWidth ;\r\n                    }\r\n\r\n                    if(('' + height).match(regex)){\r\n                        h = h / 100 * document.documentElement.clientHeight;\r\n                    }\r\n\r\n                    var element = this.elements.dialog;\r\n                    if (element.style.maxWidth !== 'none') {\r\n                        element.style.minWidth = (minWidth = element.offsetWidth) + 'px';\r\n                    }\r\n                    element.style.maxWidth = 'none';\r\n                    element.style.minHeight = this.elements.header.offsetHeight + this.elements.footer.offsetHeight + 'px';\r\n                    element.style.width = w + 'px';\r\n                    element.style.height = h + 'px';\r\n                    \r\n                    // allow custom `onresized` method\r\n                    dispatchEvent('onresized', this);\r\n                }\r\n                return this;\r\n            },\r\n            /**\r\n             * Gets or Sets dialog settings/options \r\n             *\r\n             * @param {String|Object} key A string specifying a propery name or a collection of key/value pairs.\r\n             * @param {Object} value Optional, the value associated with the key (in case it was a string).\r\n             *\r\n             * @return {undefined}\r\n             */\r\n            setting : function (key, value) {\r\n                var self = this;\r\n                var result = update(this, this.__internal.options, function(k,o,n){ optionUpdated(self,k,o,n); }, key, value);\r\n                if(result.op === 'get'){\r\n                    if(result.found){\r\n                        return result.value;\r\n                    }else if(typeof this.settings !== 'undefined'){\r\n                        return update(this, this.settings, this.settingUpdated || function(){}, key, value).value;\r\n                    }else{\r\n                        return undefined;\r\n                    }\r\n                }else if(result.op === 'set'){\r\n                    if(result.items.length > 0){\r\n                        var callback = this.settingUpdated || function(){};\r\n                        for(var x=0;x<result.items.length;x+=1){\r\n                            var item = result.items[x];\r\n                            if(!item.found && typeof this.settings !== 'undefined'){\r\n                                update(this, this.settings, callback, item.key, item.value);\r\n                            }\r\n                        }\r\n                    }\r\n                    return this;\r\n                }\r\n            },\r\n            /**\r\n             * [Alias] Sets dialog settings/options \r\n             */\r\n            set:function(key, value){\r\n                this.setting(key,value);\r\n                return this;\r\n            },\r\n            /**\r\n             * [Alias] Gets dialog settings/options \r\n             */\r\n            get:function(key){\r\n                return this.setting(key);\r\n            },\r\n            /**\r\n            * Sets dialog header\r\n            * @content {string or element}\r\n            *\r\n            * @return {undefined}\r\n            */\r\n            setHeader:function(content){\r\n                if(typeof content === 'string'){\r\n                    clearContents(this.elements.header);\r\n                    this.elements.header.innerHTML = content;\r\n                }else if (content instanceof window.HTMLElement && this.elements.header.firstChild !== content){\r\n                    clearContents(this.elements.header);\r\n                    this.elements.header.appendChild(content);\r\n                }\r\n                return this;\r\n            },\r\n            /**\r\n            * Sets dialog contents\r\n            * @content {string or element}\r\n            *\r\n            * @return {undefined}\r\n            */\r\n            setContent:function(content){\r\n                if(typeof content === 'string'){\r\n                    clearContents(this.elements.content);\r\n                    this.elements.content.innerHTML = content;\r\n                }else if (content instanceof window.HTMLElement && this.elements.content.firstChild !== content){\r\n                    clearContents(this.elements.content);\r\n                    this.elements.content.appendChild(content);\r\n                }\r\n                return this;\r\n            },\r\n            /**\r\n             * Show the dialog as modal\r\n             *\r\n             * @return {Object} the dialog instance.\r\n             */\r\n            showModal: function(className){\r\n                return this.show(true, className);\r\n            },\r\n            /**\r\n             * Show the dialog\r\n             *\r\n             * @return {Object} the dialog instance.\r\n             */\r\n            show: function (modal, className) {\r\n                \r\n                // ensure initialization\r\n                initialize(this);\r\n\r\n                if ( !this.__internal.isOpen ) {\r\n\r\n                    // add to open dialogs\r\n                    this.__internal.isOpen = true;\r\n                    openDialogs.push(this);\r\n\r\n                    // save last focused element\r\n                    if(alertify.defaults.maintainFocus){\r\n                        this.__internal.activeElement = document.activeElement;\r\n                    }\r\n\r\n                    // set tabindex attribute on body element this allows script to give it focusable\r\n                    if(!document.body.hasAttribute('tabindex')) {\r\n                        document.body.setAttribute( 'tabindex', tabindex = '0');\r\n                    }\r\n\r\n                    //allow custom dom manipulation updates before showing the dialog.\r\n                    if(typeof this.prepare === 'function'){\r\n                        this.prepare();\r\n                    }\r\n\r\n                    bindEvents(this);\r\n\r\n                    if(modal !== undefined){\r\n                        this.set('modal', modal);\r\n                    }\r\n\r\n                    //save scroll to prevent document jump\r\n                    saveScrollPosition();\r\n\r\n                    ensureNoOverflow();\r\n\r\n                    // allow custom dialog class on show\r\n                    if(typeof className === 'string' && className !== ''){\r\n                        this.__internal.className = className;\r\n                        addClass(this.elements.root, className);\r\n                    }\r\n\r\n                    // maximize if start maximized\r\n                    if ( this.get('startMaximized')) {\r\n                        this.maximize();\r\n                    }else if(this.isMaximized()){\r\n                        restore(this);\r\n                    }\r\n\r\n                    updateAbsPositionFix(this);\r\n                    this.elements.root.removeAttribute('style');\r\n                    removeClass(this.elements.root, classes.animationOut);\r\n                    addClass(this.elements.root, classes.animationIn);\r\n\r\n                    // set 1s fallback in case transition event doesn't fire\r\n                    clearTimeout( this.__internal.timerIn);\r\n                    this.__internal.timerIn = setTimeout( this.__internal.transitionInHandler, transition.supported ? 1000 : 100 );\r\n\r\n                    if(isSafari){\r\n                        // force desktop safari reflow\r\n                        var root = this.elements.root;\r\n                        root.style.display  = 'none';\r\n                        setTimeout(function(){root.style.display  = 'block';}, 0);\r\n                    }\r\n\r\n                    //reflow\r\n                    reflow = this.elements.root.offsetWidth;\r\n                  \r\n                    // show dialog\r\n                    removeClass(this.elements.root, classes.hidden);\r\n\r\n                    //restore scroll to prevent document jump\r\n                    restoreScrollPosition();\r\n\r\n                    // internal on show event\r\n                    if(typeof this.hooks.onshow === 'function'){\r\n                        this.hooks.onshow.call(this);\r\n                    }\r\n\r\n                    // allow custom `onshow` method\r\n                    dispatchEvent('onshow', this);\r\n\r\n                }else{\r\n                    // reset move updates\r\n                    resetMove(this);\r\n                    // reset resize updates\r\n                    resetResize(this);\r\n                    // shake the dialog to indicate its already open\r\n                    addClass(this.elements.dialog, classes.shake);\r\n                    var self = this;\r\n                    setTimeout(function(){\r\n                        removeClass(self.elements.dialog, classes.shake);\r\n                    },200);\r\n                }\r\n                return this;\r\n            },\r\n            /**\r\n             * Close the dialog\r\n             *\r\n             * @return {Object} The dialog instance\r\n             */\r\n            close: function () {\r\n                if (this.__internal.isOpen ) {\r\n                    // custom `onclosing` event\r\n                    if(dispatchEvent('onclosing', this) !== false){\r\n\r\n                        unbindEvents(this);\r\n\r\n                        removeClass(this.elements.root, classes.animationIn);\r\n                        addClass(this.elements.root, classes.animationOut);\r\n\r\n                        // set 1s fallback in case transition event doesn't fire\r\n                        clearTimeout( this.__internal.timerOut );\r\n                        this.__internal.timerOut = setTimeout( this.__internal.transitionOutHandler, transition.supported ? 1000 : 100 );\r\n                        // hide dialog\r\n                        addClass(this.elements.root, classes.hidden);\r\n                        //reflow\r\n                        reflow = this.elements.modal.offsetWidth;\r\n\r\n                        // return focus to the last active element\r\n                        if (alertify.defaults.maintainFocus && this.__internal.activeElement) {\r\n                            this.__internal.activeElement.focus();\r\n                            this.__internal.activeElement = null;\r\n                        }\r\n\r\n                        // remove custom dialog class on hide\r\n                        if (typeof this.__internal.className !== 'undefined' && this.__internal.className !== '') {\r\n                            removeClass(this.elements.root, this.__internal.className);\r\n                        }\r\n\r\n                        // internal on close event\r\n                        if(typeof this.hooks.onclose === 'function'){\r\n                            this.hooks.onclose.call(this);\r\n                        }\r\n\r\n                        // allow custom `onclose` method\r\n                        dispatchEvent('onclose', this);\r\n\r\n                        //remove from open dialogs\r\n                        openDialogs.splice(openDialogs.indexOf(this),1);\r\n                        this.__internal.isOpen = false;\r\n\r\n                        ensureNoOverflow();\r\n                    }\r\n\r\n                }\r\n                // last dialog and tab index was set by us, remove it.\r\n                if(!openDialogs.length && tabindex === '0'){\r\n                    document.body.removeAttribute('tabindex');\r\n                }\r\n                return this;\r\n            },\r\n            /**\r\n             * Close all open dialogs except this.\r\n             *\r\n             * @return {undefined}\r\n             */\r\n            closeOthers:function(){\r\n                alertify.closeAll(this);\r\n                return this;\r\n            },\r\n            /**\r\n             * Destroys this dialog instance\r\n             *\r\n             * @return {undefined}\r\n             */\r\n            destroy:function(){\r\n                if(this.__internal) {\r\n                    if (this.__internal.isOpen ) {\r\n                        //mark dialog for destruction, this will be called on tranistionOut event.\r\n                        this.__internal.destroy = function(){\r\n                            destruct(this, initialize);\r\n                        };\r\n                        //close the dialog to unbind all events.\r\n                        this.close();\r\n                    }else if(!this.__internal.destroy){\r\n                        destruct(this, initialize);\r\n                    }\r\n                }\r\n                return this;\r\n            },\r\n        };\r\n\t} () );\r\n    var notifier = (function () {\r\n        var reflow,\r\n            element,\r\n            openInstances = [],\r\n            classes = defaults.notifier.classes,\r\n            baseClass = classes.base;\r\n        /**\r\n         * Helper: initializes the notifier instance\r\n         *\r\n         */\r\n        function initialize(instance) {\r\n\r\n            if (!instance.__internal) {\r\n                instance.__internal = {\r\n                    position: alertify.defaults.notifier.position,\r\n                    delay: alertify.defaults.notifier.delay,\r\n                };\r\n\r\n                element = document.createElement('DIV');\r\n                var transitionOff = 'transitionOff' in defaults.notifier ? defaults.notifier.transitionOff : defaults.transitionOff;\r\n                if(transitionOff){\r\n                    baseClass = classes.base + ' ajs-no-transition';\r\n                }\r\n                updatePosition(instance);\r\n            }\r\n\r\n            //add to DOM tree.\r\n            if (element.parentNode !== document.body) {\r\n                document.body.appendChild(element);\r\n            }\r\n        }\r\n\r\n        function pushInstance(instance) {\r\n            instance.__internal.pushed = true;\r\n            openInstances.push(instance);\r\n        }\r\n        function popInstance(instance) {\r\n            openInstances.splice(openInstances.indexOf(instance), 1);\r\n            instance.__internal.pushed = false;\r\n        }\r\n        /**\r\n         * Helper: update the notifier instance position\r\n         *\r\n         */\r\n        function updatePosition(instance) {\r\n            element.className = baseClass;\r\n            switch (instance.__internal.position) {\r\n            case 'top-right':\r\n                addClass(element, classes.top + ' ' + classes.right);\r\n                break;\r\n            case 'top-left':\r\n                addClass(element, classes.top + ' ' + classes.left);\r\n                break;\r\n            case 'top-center':\r\n                addClass(element, classes.top + ' ' + classes.center);\r\n                break;\r\n            case 'bottom-left':\r\n                addClass(element, classes.bottom + ' ' + classes.left);\r\n                break;\r\n            case 'bottom-center':\r\n                addClass(element, classes.bottom + ' ' + classes.center);\r\n                break;\r\n\r\n            default:\r\n            case 'bottom-right':\r\n                addClass(element, classes.bottom + ' ' + classes.right);\r\n                break;\r\n            }\r\n        }\r\n\r\n        /**\r\n        * creates a new notification message\r\n        *\r\n        * @param  {DOMElement} message\tThe notifier message element\r\n        * @param  {Number} wait   Time (in ms) to wait before the message is dismissed, a value of 0 means keep open till clicked.\r\n        * @param  {Function} callback A callback function to be invoked when the message is dismissed.\r\n        *\r\n        * @return {undefined}\r\n        */\r\n        function create(div, callback) {\r\n\r\n            function clickDelegate(event, instance) {\r\n                if(!instance.__internal.closeButton || event.target.getAttribute('data-close') === 'true'){\r\n                    instance.dismiss(true);\r\n                }\r\n            }\r\n\r\n            function transitionDone(event, instance) {\r\n                // unbind event\r\n                off(instance.element, transition.type, transitionDone);\r\n                // remove the message\r\n                element.removeChild(instance.element);\r\n            }\r\n\r\n            function initialize(instance) {\r\n                if (!instance.__internal) {\r\n                    instance.__internal = {\r\n                        pushed: false,\r\n                        delay : undefined,\r\n                        timer: undefined,\r\n                        clickHandler: undefined,\r\n                        transitionEndHandler: undefined,\r\n                        transitionTimeout: undefined\r\n                    };\r\n                    instance.__internal.clickHandler = delegate(instance, clickDelegate);\r\n                    instance.__internal.transitionEndHandler = delegate(instance, transitionDone);\r\n                }\r\n                return instance;\r\n            }\r\n            function clearTimers(instance) {\r\n                clearTimeout(instance.__internal.timer);\r\n                clearTimeout(instance.__internal.transitionTimeout);\r\n            }\r\n            return initialize({\r\n                /* notification DOM element*/\r\n                element: div,\r\n                /*\r\n                 * Pushes a notification message\r\n                 * @param {string or DOMElement} content The notification message content\r\n                 * @param {Number} wait The time (in seconds) to wait before the message is dismissed, a value of 0 means keep open till clicked.\r\n                 *\r\n                 */\r\n                push: function (_content, _wait) {\r\n                    if (!this.__internal.pushed) {\r\n\r\n                        pushInstance(this);\r\n                        clearTimers(this);\r\n\r\n                        var content, wait;\r\n                        switch (arguments.length) {\r\n                        case 0:\r\n                            wait = this.__internal.delay;\r\n                            break;\r\n                        case 1:\r\n                            if (typeof (_content) === 'number') {\r\n                                wait = _content;\r\n                            } else {\r\n                                content = _content;\r\n                                wait = this.__internal.delay;\r\n                            }\r\n                            break;\r\n                        case 2:\r\n                            content = _content;\r\n                            wait = _wait;\r\n                            break;\r\n                        }\r\n                        this.__internal.closeButton = alertify.defaults.notifier.closeButton;\r\n                        // set contents\r\n                        if (typeof content !== 'undefined') {\r\n                            this.setContent(content);\r\n                        }\r\n                        // append or insert\r\n                        if (notifier.__internal.position.indexOf('top') < 0) {\r\n                            element.appendChild(this.element);\r\n                        } else {\r\n                            element.insertBefore(this.element, element.firstChild);\r\n                        }\r\n                        reflow = this.element.offsetWidth;\r\n                        addClass(this.element, classes.visible);\r\n                        // attach click event\r\n                        on(this.element, 'click', this.__internal.clickHandler);\r\n                        return this.delay(wait);\r\n                    }\r\n                    return this;\r\n                },\r\n                /*\r\n                 * {Function} callback function to be invoked before dismissing the notification message.\r\n                 * Remarks: A return value === 'false' will cancel the dismissal\r\n                 *\r\n                 */\r\n                ondismiss: function () { },\r\n                /*\r\n                 * {Function} callback function to be invoked when the message is dismissed.\r\n                 *\r\n                 */\r\n                callback: callback,\r\n                /*\r\n                 * Dismisses the notification message\r\n                 * @param {Boolean} clicked A flag indicating if the dismissal was caused by a click.\r\n                 *\r\n                 */\r\n                dismiss: function (clicked) {\r\n                    if (this.__internal.pushed) {\r\n                        clearTimers(this);\r\n                        if (!(typeof this.ondismiss === 'function' && this.ondismiss.call(this) === false)) {\r\n                            //detach click event\r\n                            off(this.element, 'click', this.__internal.clickHandler);\r\n                            // ensure element exists\r\n                            if (typeof this.element !== 'undefined' && this.element.parentNode === element) {\r\n                                //transition end or fallback\r\n                                this.__internal.transitionTimeout = setTimeout(this.__internal.transitionEndHandler, transition.supported ? 1000 : 100);\r\n                                removeClass(this.element, classes.visible);\r\n\r\n                                // custom callback on dismiss\r\n                                if (typeof this.callback === 'function') {\r\n                                    this.callback.call(this, clicked);\r\n                                }\r\n                            }\r\n                            popInstance(this);\r\n                        }\r\n                    }\r\n                    return this;\r\n                },\r\n                /*\r\n                 * Delays the notification message dismissal\r\n                 * @param {Number} wait The time (in seconds) to wait before the message is dismissed, a value of 0 means keep open till clicked.\r\n                 *\r\n                 */\r\n                delay: function (wait) {\r\n                    clearTimers(this);\r\n                    this.__internal.delay = typeof wait !== 'undefined' && !isNaN(+wait) ? +wait : notifier.__internal.delay;\r\n                    if (this.__internal.delay > 0) {\r\n                        var  self = this;\r\n                        this.__internal.timer = setTimeout(function () { self.dismiss(); }, this.__internal.delay * 1000);\r\n                    }\r\n                    return this;\r\n                },\r\n                /*\r\n                 * Sets the notification message contents\r\n                 * @param {string or DOMElement} content The notification message content\r\n                 *\r\n                 */\r\n                setContent: function (content) {\r\n                    if (typeof content === 'string') {\r\n                        clearContents(this.element);\r\n                        this.element.innerHTML = content;\r\n                    } else if (content instanceof window.HTMLElement && this.element.firstChild !== content) {\r\n                        clearContents(this.element);\r\n                        this.element.appendChild(content);\r\n                    }\r\n                    if(this.__internal.closeButton){\r\n                        var close = document.createElement('span');\r\n                        addClass(close, classes.close);\r\n                        close.setAttribute('data-close', true);\r\n                        this.element.appendChild(close);\r\n                    }\r\n                    return this;\r\n                },\r\n                /*\r\n                 * Dismisses all open notifications except this.\r\n                 *\r\n                 */\r\n                dismissOthers: function () {\r\n                    notifier.dismissAll(this);\r\n                    return this;\r\n                }\r\n            });\r\n        }\r\n\r\n        //notifier api\r\n        return {\r\n            /**\r\n             * Gets or Sets notifier settings.\r\n             *\r\n             * @param {string} key The setting name\r\n             * @param {Variant} value The setting value.\r\n             *\r\n             * @return {Object}\tif the called as a setter, return the notifier instance.\r\n             */\r\n            setting: function (key, value) {\r\n                //ensure init\r\n                initialize(this);\r\n\r\n                if (typeof value === 'undefined') {\r\n                    //get\r\n                    return this.__internal[key];\r\n                } else {\r\n                    //set\r\n                    switch (key) {\r\n                    case 'position':\r\n                        this.__internal.position = value;\r\n                        updatePosition(this);\r\n                        break;\r\n                    case 'delay':\r\n                        this.__internal.delay = value;\r\n                        break;\r\n                    }\r\n                }\r\n                return this;\r\n            },\r\n            /**\r\n             * [Alias] Sets dialog settings/options\r\n             */\r\n            set:function(key,value){\r\n                this.setting(key,value);\r\n                return this;\r\n            },\r\n            /**\r\n             * [Alias] Gets dialog settings/options\r\n             */\r\n            get:function(key){\r\n                return this.setting(key);\r\n            },\r\n            /**\r\n             * Creates a new notification message\r\n             *\r\n             * @param {string} type The type of notification message (simply a CSS class name 'ajs-{type}' to be added).\r\n             * @param {Function} callback  A callback function to be invoked when the message is dismissed.\r\n             *\r\n             * @return {undefined}\r\n             */\r\n            create: function (type, callback) {\r\n                //ensure notifier init\r\n                initialize(this);\r\n                //create new notification message\r\n                var div = document.createElement('div');\r\n                div.className = classes.message + ((typeof type === 'string' && type !== '') ? ' ' + classes.prefix + type : '');\r\n                return create(div, callback);\r\n            },\r\n            /**\r\n             * Dismisses all open notifications.\r\n             *\r\n             * @param {Object} excpet [optional] The notification object to exclude from dismissal.\r\n             *\r\n             */\r\n            dismissAll: function (except) {\r\n                var clone = openInstances.slice(0);\r\n                for (var x = 0; x < clone.length; x += 1) {\r\n                    var  instance = clone[x];\r\n                    if (except === undefined || except !== instance) {\r\n                        instance.dismiss();\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    })();\r\n\r\n    /**\r\n     * Alertify public API\r\n     * This contains everything that is exposed through the alertify object.\r\n     *\r\n     * @return {Object}\r\n     */\r\n    function Alertify() {\r\n\r\n        // holds a references of created dialogs\r\n        var dialogs = {};\r\n\r\n        /**\r\n         * Extends a given prototype by merging properties from base into sub.\r\n         *\r\n         * @sub {Object} sub The prototype being overwritten.\r\n         * @base {Object} base The prototype being written.\r\n         *\r\n         * @return {Object} The extended prototype.\r\n         */\r\n        function extend(sub, base) {\r\n            // copy dialog pototype over definition.\r\n            for (var prop in base) {\r\n                if (base.hasOwnProperty(prop)) {\r\n                    sub[prop] = base[prop];\r\n                }\r\n            }\r\n            return sub;\r\n        }\r\n\r\n\r\n        /**\r\n        * Helper: returns a dialog instance from saved dialogs.\r\n        * and initializes the dialog if its not already initialized.\r\n        *\r\n        * @name {String} name The dialog name.\r\n        *\r\n        * @return {Object} The dialog instance.\r\n        */\r\n        function get_dialog(name) {\r\n            var dialog = dialogs[name].dialog;\r\n            //initialize the dialog if its not already initialized.\r\n            if (dialog && typeof dialog.__init === 'function') {\r\n                dialog.__init(dialog);\r\n            }\r\n            return dialog;\r\n        }\r\n\r\n        /**\r\n         * Helper:  registers a new dialog definition.\r\n         *\r\n         * @name {String} name The dialog name.\r\n         * @Factory {Function} Factory a function resposible for creating dialog prototype.\r\n         * @transient {Boolean} transient True to create a new dialog instance each time the dialog is invoked, false otherwise.\r\n         * @base {String} base the name of another dialog to inherit from.\r\n         *\r\n         * @return {Object} The dialog definition.\r\n         */\r\n        function register(name, Factory, transient, base) {\r\n            var definition = {\r\n                dialog: null,\r\n                factory: Factory\r\n            };\r\n\r\n            //if this is based on an existing dialog, create a new definition\r\n            //by applying the new protoype over the existing one.\r\n            if (base !== undefined) {\r\n                definition.factory = function () {\r\n                    return extend(new dialogs[base].factory(), new Factory());\r\n                };\r\n            }\r\n\r\n            if (!transient) {\r\n                //create a new definition based on dialog\r\n                definition.dialog = extend(new definition.factory(), dialog);\r\n            }\r\n            return dialogs[name] = definition;\r\n        }\r\n\r\n        return {\r\n            /**\r\n             * Alertify defaults\r\n             * \r\n             * @type {Object}\r\n             */\r\n            defaults: defaults,\r\n            /**\r\n             * Dialogs factory \r\n             *\r\n             * @param {string}      Dialog name.\r\n             * @param {Function}    A Dialog factory function.\r\n             * @param {Boolean}     Indicates whether to create a singleton or transient dialog.\r\n             * @param {String}      The name of the base type to inherit from.\r\n             */\r\n            dialog: function (name, Factory, transient, base) {\r\n\r\n                // get request, create a new instance and return it.\r\n                if (typeof Factory !== 'function') {\r\n                    return get_dialog(name);\r\n                }\r\n\r\n                if (this.hasOwnProperty(name)) {\r\n                    throw new Error('alertify.dialog: name already exists');\r\n                }\r\n\r\n                // register the dialog\r\n                var definition = register(name, Factory, transient, base);\r\n\r\n                if (transient) {\r\n\r\n                    // make it public\r\n                    this[name] = function () {\r\n                        //if passed with no params, consider it a get request\r\n                        if (arguments.length === 0) {\r\n                            return definition.dialog;\r\n                        } else {\r\n                            var instance = extend(new definition.factory(), dialog);\r\n                            //ensure init\r\n                            if (instance && typeof instance.__init === 'function') {\r\n                                instance.__init(instance);\r\n                            }\r\n                            instance['main'].apply(instance, arguments);\r\n                            return instance['show'].apply(instance);\r\n                        }\r\n                    };\r\n                } else {\r\n                    // make it public\r\n                    this[name] = function () {\r\n                        //ensure init\r\n                        if (definition.dialog && typeof definition.dialog.__init === 'function') {\r\n                            definition.dialog.__init(definition.dialog);\r\n                        }\r\n                        //if passed with no params, consider it a get request\r\n                        if (arguments.length === 0) {\r\n                            return definition.dialog;\r\n                        } else {\r\n                            var dialog = definition.dialog;\r\n                            dialog['main'].apply(definition.dialog, arguments);\r\n                            return dialog['show'].apply(definition.dialog);\r\n                        }\r\n                    };\r\n                }\r\n            },\r\n            /**\r\n             * Close all open dialogs.\r\n             *\r\n             * @param {Object} excpet [optional] The dialog object to exclude from closing.\r\n             *\r\n             * @return {undefined}\r\n             */\r\n            closeAll: function (except) {\r\n                var clone = openDialogs.slice(0);\r\n                for (var x = 0; x < clone.length; x += 1) {\r\n                    var instance = clone[x];\r\n                    if (except === undefined || except !== instance) {\r\n                        instance.close();\r\n                    }\r\n                }\r\n            },\r\n            /**\r\n             * Gets or Sets dialog settings/options. if the dialog is transient, this call does nothing.\r\n             *\r\n             * @param {string} name The dialog name.\r\n             * @param {String|Object} key A string specifying a propery name or a collection of key/value pairs.\r\n             * @param {Variant} value Optional, the value associated with the key (in case it was a string).\r\n             *\r\n             * @return {undefined}\r\n             */\r\n            setting: function (name, key, value) {\r\n\r\n                if (name === 'notifier') {\r\n                    return notifier.setting(key, value);\r\n                }\r\n\r\n                var dialog = get_dialog(name);\r\n                if (dialog) {\r\n                    return dialog.setting(key, value);\r\n                }\r\n            },\r\n            /**\r\n             * [Alias] Sets dialog settings/options \r\n             */\r\n            set: function(name,key,value){\r\n                return this.setting(name, key,value);\r\n            },\r\n            /**\r\n             * [Alias] Gets dialog settings/options \r\n             */\r\n            get: function(name, key){\r\n                return this.setting(name, key);\r\n            },\r\n            /**\r\n             * Creates a new notification message.\r\n             * If a type is passed, a class name \"ajs-{type}\" will be added.\r\n             * This allows for custom look and feel for various types of notifications.\r\n             *\r\n             * @param  {String | DOMElement}    [message=undefined]\t\tMessage text\r\n             * @param  {String}                 [type='']\t\t\t\tType of log message\r\n             * @param  {String}                 [wait='']\t\t\t\tTime (in seconds) to wait before auto-close\r\n             * @param  {Function}               [callback=undefined]\tA callback function to be invoked when the log is closed.\r\n             *\r\n             * @return {Object} Notification object.\r\n             */\r\n            notify: function (message, type, wait, callback) {\r\n                return notifier.create(type, callback).push(message, wait);\r\n            },\r\n            /**\r\n             * Creates a new notification message.\r\n             *\r\n             * @param  {String}\t\t[message=undefined]\t\tMessage text\r\n             * @param  {String}     [wait='']\t\t\t\tTime (in seconds) to wait before auto-close\r\n             * @param  {Function}\t[callback=undefined]\tA callback function to be invoked when the log is closed.\r\n             *\r\n             * @return {Object} Notification object.\r\n             */\r\n            message: function (message, wait, callback) {\r\n                return notifier.create(null, callback).push(message, wait);\r\n            },\r\n            /**\r\n             * Creates a new notification message of type 'success'.\r\n             *\r\n             * @param  {String}\t\t[message=undefined]\t\tMessage text\r\n             * @param  {String}     [wait='']\t\t\t\tTime (in seconds) to wait before auto-close\r\n             * @param  {Function}\t[callback=undefined]\tA callback function to be invoked when the log is closed.\r\n             *\r\n             * @return {Object} Notification object.\r\n             */\r\n            success: function (message, wait, callback) {\r\n                return notifier.create('success', callback).push(message, wait);\r\n            },\r\n            /**\r\n             * Creates a new notification message of type 'error'.\r\n             *\r\n             * @param  {String}\t\t[message=undefined]\t\tMessage text\r\n             * @param  {String}     [wait='']\t\t\t\tTime (in seconds) to wait before auto-close\r\n             * @param  {Function}\t[callback=undefined]\tA callback function to be invoked when the log is closed.\r\n             *\r\n             * @return {Object} Notification object.\r\n             */\r\n            error: function (message, wait, callback) {\r\n                return notifier.create('error', callback).push(message, wait);\r\n            },\r\n            /**\r\n             * Creates a new notification message of type 'warning'.\r\n             *\r\n             * @param  {String}\t\t[message=undefined]\t\tMessage text\r\n             * @param  {String}     [wait='']\t\t\t\tTime (in seconds) to wait before auto-close\r\n             * @param  {Function}\t[callback=undefined]\tA callback function to be invoked when the log is closed.\r\n             *\r\n             * @return {Object} Notification object.\r\n             */\r\n            warning: function (message, wait, callback) {\r\n                return notifier.create('warning', callback).push(message, wait);\r\n            },\r\n            /**\r\n             * Dismisses all open notifications\r\n             *\r\n             * @return {undefined}\r\n             */\r\n            dismissAll: function () {\r\n                notifier.dismissAll();\r\n            }\r\n        };\r\n    }\r\n    var alertify = new Alertify();\r\n\r\n    /**\r\n    * Alert dialog definition\r\n    *\r\n    * invoked by:\r\n    *\talertify.alert(message);\r\n    *\talertify.alert(title, message);\r\n    *\talertify.alert(message, onok);\r\n    *\talertify.alert(title, message, onok);\r\n     */\r\n    alertify.dialog('alert', function () {\r\n        return {\r\n            main: function (_title, _message, _onok) {\r\n                var title, message, onok;\r\n                switch (arguments.length) {\r\n                case 1:\r\n                    message = _title;\r\n                    break;\r\n                case 2:\r\n                    if (typeof _message === 'function') {\r\n                        message = _title;\r\n                        onok = _message;\r\n                    } else {\r\n                        title = _title;\r\n                        message = _message;\r\n                    }\r\n                    break;\r\n                case 3:\r\n                    title = _title;\r\n                    message = _message;\r\n                    onok = _onok;\r\n                    break;\r\n                }\r\n                this.set('title', title);\r\n                this.set('message', message);\r\n                this.set('onok', onok);\r\n                return this;\r\n            },\r\n            setup: function () {\r\n                return {\r\n                    buttons: [\r\n                        {\r\n                            text: alertify.defaults.glossary.ok,\r\n                            key: keys.ESC,\r\n                            invokeOnClose: true,\r\n                            className: alertify.defaults.theme.ok,\r\n                        }\r\n                    ],\r\n                    focus: {\r\n                        element: 0,\r\n                        select: false\r\n                    },\r\n                    options: {\r\n                        maximizable: false,\r\n                        resizable: false\r\n                    }\r\n                };\r\n            },\r\n            build: function () {\r\n                // nothing\r\n            },\r\n            prepare: function () {\r\n                //nothing\r\n            },\r\n            setMessage: function (message) {\r\n                this.setContent(message);\r\n            },\r\n            settings: {\r\n                message: undefined,\r\n                onok: undefined,\r\n                label: undefined,\r\n            },\r\n            settingUpdated: function (key, oldValue, newValue) {\r\n                switch (key) {\r\n                case 'message':\r\n                    this.setMessage(newValue);\r\n                    break;\r\n                case 'label':\r\n                    if (this.__internal.buttons[0].element) {\r\n                        this.__internal.buttons[0].element.innerHTML = newValue;\r\n                    }\r\n                    break;\r\n                }\r\n            },\r\n            callback: function (closeEvent) {\r\n                if (typeof this.get('onok') === 'function') {\r\n                    var returnValue = this.get('onok').call(this, closeEvent);\r\n                    if (typeof returnValue !== 'undefined') {\r\n                        closeEvent.cancel = !returnValue;\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    });\r\n    /**\r\n     * Confirm dialog object\r\n     *\r\n     *\talertify.confirm(message);\r\n     *\talertify.confirm(message, onok);\r\n     *\talertify.confirm(message, onok, oncancel);\r\n     *\talertify.confirm(title, message, onok, oncancel);\r\n     */\r\n    alertify.dialog('confirm', function () {\r\n\r\n        var autoConfirm = {\r\n            timer: null,\r\n            index: null,\r\n            text: null,\r\n            duration: null,\r\n            task: function (event, self) {\r\n                if (self.isOpen()) {\r\n                    self.__internal.buttons[autoConfirm.index].element.innerHTML = autoConfirm.text + ' (&#8207;' + autoConfirm.duration + '&#8207;) ';\r\n                    autoConfirm.duration -= 1;\r\n                    if (autoConfirm.duration === -1) {\r\n                        clearAutoConfirm(self);\r\n                        var button = self.__internal.buttons[autoConfirm.index];\r\n                        var closeEvent = createCloseEvent(autoConfirm.index, button);\r\n\r\n                        if (typeof self.callback === 'function') {\r\n                            self.callback.apply(self, [closeEvent]);\r\n                        }\r\n                        //close the dialog.\r\n                        if (closeEvent.close !== false) {\r\n                            self.close();\r\n                        }\r\n                    }\r\n                } else {\r\n                    clearAutoConfirm(self);\r\n                }\r\n            }\r\n        };\r\n\r\n        function clearAutoConfirm(self) {\r\n            if (autoConfirm.timer !== null) {\r\n                clearInterval(autoConfirm.timer);\r\n                autoConfirm.timer = null;\r\n                self.__internal.buttons[autoConfirm.index].element.innerHTML = autoConfirm.text;\r\n            }\r\n        }\r\n\r\n        function startAutoConfirm(self, index, duration) {\r\n            clearAutoConfirm(self);\r\n            autoConfirm.duration = duration;\r\n            autoConfirm.index = index;\r\n            autoConfirm.text = self.__internal.buttons[index].element.innerHTML;\r\n            autoConfirm.timer = setInterval(delegate(self, autoConfirm.task), 1000);\r\n            autoConfirm.task(null, self);\r\n        }\r\n\r\n\r\n        return {\r\n            main: function (_title, _message, _onok, _oncancel) {\r\n                var title, message, onok, oncancel;\r\n                switch (arguments.length) {\r\n                case 1:\r\n                    message = _title;\r\n                    break;\r\n                case 2:\r\n                    message = _title;\r\n                    onok = _message;\r\n                    break;\r\n                case 3:\r\n                    message = _title;\r\n                    onok = _message;\r\n                    oncancel = _onok;\r\n                    break;\r\n                case 4:\r\n                    title = _title;\r\n                    message = _message;\r\n                    onok = _onok;\r\n                    oncancel = _oncancel;\r\n                    break;\r\n                }\r\n                this.set('title', title);\r\n                this.set('message', message);\r\n                this.set('onok', onok);\r\n                this.set('oncancel', oncancel);\r\n                return this;\r\n            },\r\n            setup: function () {\r\n                return {\r\n                    buttons: [\r\n                        {\r\n                            text: alertify.defaults.glossary.ok,\r\n                            key: keys.ENTER,\r\n                            className: alertify.defaults.theme.ok,\r\n                        },\r\n                        {\r\n                            text: alertify.defaults.glossary.cancel,\r\n                            key: keys.ESC,\r\n                            invokeOnClose: true,\r\n                            className: alertify.defaults.theme.cancel,\r\n                        }\r\n                    ],\r\n                    focus: {\r\n                        element: 0,\r\n                        select: false\r\n                    },\r\n                    options: {\r\n                        maximizable: false,\r\n                        resizable: false\r\n                    }\r\n                };\r\n            },\r\n            build: function () {\r\n                //nothing\r\n            },\r\n            prepare: function () {\r\n                //nothing\r\n            },\r\n            setMessage: function (message) {\r\n                this.setContent(message);\r\n            },\r\n            settings: {\r\n                message: null,\r\n                labels: null,\r\n                onok: null,\r\n                oncancel: null,\r\n                defaultFocus: null,\r\n                reverseButtons: null,\r\n            },\r\n            settingUpdated: function (key, oldValue, newValue) {\r\n                switch (key) {\r\n                case 'message':\r\n                    this.setMessage(newValue);\r\n                    break;\r\n                case 'labels':\r\n                    if ('ok' in newValue && this.__internal.buttons[0].element) {\r\n                        this.__internal.buttons[0].text = newValue.ok;\r\n                        this.__internal.buttons[0].element.innerHTML = newValue.ok;\r\n                    }\r\n                    if ('cancel' in newValue && this.__internal.buttons[1].element) {\r\n                        this.__internal.buttons[1].text = newValue.cancel;\r\n                        this.__internal.buttons[1].element.innerHTML = newValue.cancel;\r\n                    }\r\n                    break;\r\n                case 'reverseButtons':\r\n                    if (newValue === true) {\r\n                        this.elements.buttons.primary.appendChild(this.__internal.buttons[0].element);\r\n                    } else {\r\n                        this.elements.buttons.primary.appendChild(this.__internal.buttons[1].element);\r\n                    }\r\n                    break;\r\n                case 'defaultFocus':\r\n                    this.__internal.focus.element = newValue === 'ok' ? 0 : 1;\r\n                    break;\r\n                }\r\n            },\r\n            callback: function (closeEvent) {\r\n                clearAutoConfirm(this);\r\n                var returnValue;\r\n                switch (closeEvent.index) {\r\n                case 0:\r\n                    if (typeof this.get('onok') === 'function') {\r\n                        returnValue = this.get('onok').call(this, closeEvent);\r\n                        if (typeof returnValue !== 'undefined') {\r\n                            closeEvent.cancel = !returnValue;\r\n                        }\r\n                    }\r\n                    break;\r\n                case 1:\r\n                    if (typeof this.get('oncancel') === 'function') {\r\n                        returnValue = this.get('oncancel').call(this, closeEvent);\r\n                        if (typeof returnValue !== 'undefined') {\r\n                            closeEvent.cancel = !returnValue;\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n            },\r\n            autoOk: function (duration) {\r\n                startAutoConfirm(this, 0, duration);\r\n                return this;\r\n            },\r\n            autoCancel: function (duration) {\r\n                startAutoConfirm(this, 1, duration);\r\n                return this;\r\n            }\r\n        };\r\n    });\r\n    /**\r\n     * Prompt dialog object\r\n     *\r\n     * invoked by:\r\n     *\talertify.prompt(message);\r\n     *\talertify.prompt(message, value);\r\n     *\talertify.prompt(message, value, onok);\r\n     *\talertify.prompt(message, value, onok, oncancel);\r\n     *\talertify.prompt(title, message, value, onok, oncancel);\r\n     */\r\n    alertify.dialog('prompt', function () {\r\n        var input = document.createElement('INPUT');\r\n        var p = document.createElement('P');\r\n        return {\r\n            main: function (_title, _message, _value, _onok, _oncancel) {\r\n                var title, message, value, onok, oncancel;\r\n                switch (arguments.length) {\r\n                case 1:\r\n                    message = _title;\r\n                    break;\r\n                case 2:\r\n                    message = _title;\r\n                    value = _message;\r\n                    break;\r\n                case 3:\r\n                    message = _title;\r\n                    value = _message;\r\n                    onok = _value;\r\n                    break;\r\n                case 4:\r\n                    message = _title;\r\n                    value = _message;\r\n                    onok = _value;\r\n                    oncancel = _onok;\r\n                    break;\r\n                case 5:\r\n                    title = _title;\r\n                    message = _message;\r\n                    value = _value;\r\n                    onok = _onok;\r\n                    oncancel = _oncancel;\r\n                    break;\r\n                }\r\n                this.set('title', title);\r\n                this.set('message', message);\r\n                this.set('value', value);\r\n                this.set('onok', onok);\r\n                this.set('oncancel', oncancel);\r\n                return this;\r\n            },\r\n            setup: function () {\r\n                return {\r\n                    buttons: [\r\n                        {\r\n                            text: alertify.defaults.glossary.ok,\r\n                            key: keys.ENTER,\r\n                            className: alertify.defaults.theme.ok,\r\n                        },\r\n                        {\r\n                            text: alertify.defaults.glossary.cancel,\r\n                            key: keys.ESC,\r\n                            invokeOnClose: true,\r\n                            className: alertify.defaults.theme.cancel,\r\n                        }\r\n                    ],\r\n                    focus: {\r\n                        element: input,\r\n                        select: true\r\n                    },\r\n                    options: {\r\n                        maximizable: false,\r\n                        resizable: false\r\n                    }\r\n                };\r\n            },\r\n            build: function () {\r\n                input.className = alertify.defaults.theme.input;\r\n                input.setAttribute('type', 'text');\r\n                input.value = this.get('value');\r\n                this.elements.content.appendChild(p);\r\n                this.elements.content.appendChild(input);\r\n            },\r\n            prepare: function () {\r\n                //nothing\r\n            },\r\n            setMessage: function (message) {\r\n                if (typeof message === 'string') {\r\n                    clearContents(p);\r\n                    p.innerHTML = message;\r\n                } else if (message instanceof window.HTMLElement && p.firstChild !== message) {\r\n                    clearContents(p);\r\n                    p.appendChild(message);\r\n                }\r\n            },\r\n            settings: {\r\n                message: undefined,\r\n                labels: undefined,\r\n                onok: undefined,\r\n                oncancel: undefined,\r\n                value: '',\r\n                type:'text',\r\n                reverseButtons: undefined,\r\n            },\r\n            settingUpdated: function (key, oldValue, newValue) {\r\n                switch (key) {\r\n                case 'message':\r\n                    this.setMessage(newValue);\r\n                    break;\r\n                case 'value':\r\n                    input.value = newValue;\r\n                    break;\r\n                case 'type':\r\n                    switch (newValue) {\r\n                    case 'text':\r\n                    case 'color':\r\n                    case 'date':\r\n                    case 'datetime-local':\r\n                    case 'email':\r\n                    case 'month':\r\n                    case 'number':\r\n                    case 'password':\r\n                    case 'search':\r\n                    case 'tel':\r\n                    case 'time':\r\n                    case 'week':\r\n                        input.type = newValue;\r\n                        break;\r\n                    default:\r\n                        input.type = 'text';\r\n                        break;\r\n                    }\r\n                    break;\r\n                case 'labels':\r\n                    if (newValue.ok && this.__internal.buttons[0].element) {\r\n                        this.__internal.buttons[0].element.innerHTML = newValue.ok;\r\n                    }\r\n                    if (newValue.cancel && this.__internal.buttons[1].element) {\r\n                        this.__internal.buttons[1].element.innerHTML = newValue.cancel;\r\n                    }\r\n                    break;\r\n                case 'reverseButtons':\r\n                    if (newValue === true) {\r\n                        this.elements.buttons.primary.appendChild(this.__internal.buttons[0].element);\r\n                    } else {\r\n                        this.elements.buttons.primary.appendChild(this.__internal.buttons[1].element);\r\n                    }\r\n                    break;\r\n                }\r\n            },\r\n            callback: function (closeEvent) {\r\n                var returnValue;\r\n                switch (closeEvent.index) {\r\n                case 0:\r\n                    this.settings.value = input.value;\r\n                    if (typeof this.get('onok') === 'function') {\r\n                        returnValue = this.get('onok').call(this, closeEvent, this.settings.value);\r\n                        if (typeof returnValue !== 'undefined') {\r\n                            closeEvent.cancel = !returnValue;\r\n                        }\r\n                    }\r\n                    break;\r\n                case 1:\r\n                    if (typeof this.get('oncancel') === 'function') {\r\n                        returnValue = this.get('oncancel').call(this, closeEvent);\r\n                        if (typeof returnValue !== 'undefined') {\r\n                            closeEvent.cancel = !returnValue;\r\n                        }\r\n                    }\r\n                    if(!closeEvent.cancel){\r\n                        input.value = this.settings.value;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        };\r\n    });\r\n\r\n    // CommonJS\r\n    if ( typeof module === 'object' && typeof module.exports === 'object' ) {\r\n        module.exports = alertify;\r\n    // AMD\r\n    } else if ( typeof define === 'function' && define.amd) {\r\n        define( [], function () {\r\n            return alertify;\r\n        } );\r\n    // window\r\n    } else if ( !window.alertify ) {\r\n        window.alertify = alertify;\r\n    }\r\n\r\n} ( typeof window !== 'undefined' ? window : this ) );\r\n","import './scss/index.scss';\r\nimport Parallax from './parallax.js'\r\nimport Typewriter from '../node_modules/typewriter-effect/dist/core'\r\nimport alertify from '../node_modules/alertifyjs/build/alertify'\r\n\r\n// Parallaxe\r\nlet scene = document.getElementById('scene');\r\nlet parallaxInstance = new Parallax(scene, {\r\n    relativeInput: true\r\n});\r\nparallaxInstance.friction(0.05, 0.05);\r\nparallaxInstance.limit(40, 20);\r\n\r\n// Typewriter\r\nnew Typewriter('#typewriter', {\r\n    strings: [\"Maçonnerie générale\", \"Constructions neuves\", \"Rénovation de l'existant\", \"Bâtiments agricoles\", \"Fosses & Assainissement\"],\r\n    autoStart: true,\r\n    loop: true,\r\n    delay: 100,\r\n    deleteSpeed: 35,\r\n    pauseFor: 6000,\r\n});\r\n\r\n// AJAX Form\r\n\r\ndocument.querySelector(\"form\").addEventListener(\"submit\", handleSubmit);\r\n\r\nconst handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    let myForm = document.getElementById('submit-contact');\r\n    let formData = new FormData(myForm)\r\n    fetch('/', {\r\n        method: 'POST',\r\n        headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\r\n        body: new URLSearchParams(formData).toString()\r\n    }).then(() => {\r\n        alertify.success('Message envoyé. Nous vous recontacterons au plus tôt !');\r\n        console.log('Formulaire envoyé !');\r\n    }).catch((error) => {\r\n        alertify.success(\"Erreur lors de l'envoi du message. Veuillez réessayer.\");\r\n        alert(error);\r\n    })\r\n}"]}